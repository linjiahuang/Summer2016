(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258655,       5130]
NotebookOptionsPosition[    253754,       4975]
NotebookOutlinePosition[    254088,       4990]
CellTagsIndexPosition[    254045,       4987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", " ", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6781913534690323`*^9, 3.678191375721218*^9}, {
   3.678191438824359*^9, 3.678191527220092*^9}, 3.678191557255122*^9, {
   3.6781915928882303`*^9, 3.6781916831125803`*^9}, {3.678191734442513*^9, 
   3.6781917493096952`*^9}, {3.6781917896195803`*^9, 3.678191838436637*^9}, {
   3.67819190290971*^9, 3.6781920083199997`*^9}, {3.678192097303084*^9, 
   3.6781921194148073`*^9}, 3.678447540338269*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
/feixFb2M10dcX3B2096tqncmPxmor0KnMfPOeLZ8KPFxOJiPfXGARuaN4p0
oDjx/nvtbF4bq+ZblKclP7pqnNfddl9XJHwcqcT1BR+47lLjbi8S6D0U/NnC
w/lPPz+l4+O9L6HWM6eIJ9fIA/iaz3ddG597SMeBn3uJB8+kvYlWHtXEowIf
OMH0W8JiHzrO9uyiguSg6qrwT3sOX3LP9IbPOuurHE3Oa8mvr4zDpzbO7wcc
H3ndaw8O1OvzoxddF57vxX2O+N/8azkyOm0ZxY/3tVM9LeJC5mf64vja7k8e
50XJz9sUR6u4oR2iXqc4GzwIcY89qLwuHT+T+OXjM4vNgq8q52u4UnXm+6wp
2WeVj06aH2l2KY/aj9a9ulJH54Ny7ZoDXh1UKdQe3HzWP1ZF3dKVyZrfJV5n
9bzQWjPU1B7Xd17T1UcHvHxG54v2oUd6ND4Wd1mZZWw00tbPRp1mbrY6Oc9a
7X6toHt+WmIzwVXgOF/cD7jfhldZorfpVjk6zvBqVTtnB5d6w3E4x3XBcRw2
fvX8PHkFnRf8LPmwu2ujl+eVuH8Qj+ngfnppzQ2awT/aF82bs2V93fPkE9wj
p9HNBQ1e0n0Ofutpw4bdTr+h9ojnUe+FrZpUyKV+hPbZc3T+bNz+PvkE/+t7
/W4zx+aQf9MG+X39osqpKuwf/zXXuBNx3Ie5L+btXuC6Ed5k9y18arsPtXim
fmFRfPX681uHmqI9v47wjPvketruvzMXXCHP2q6j7LkmPGB8c1x3OqL9ZiPy
g/HNx2a+qVuNZeQB/cJ/TaNu5VLO0nUHr6hWTcwfs4bGQ3hT6K9RR+x8Rnk5
6tev776b7eWqxP2A+9z2xpUDC3Ki6Tg435X27ZZvb99DuVF6Tn2j63vsRrcF
n/8/PuD44A2Cil/uOJlI8eM+edjy8nCT4hy6T/C7+3STX77oUzo+w49Jtue5
z2sd6X7LyhqUfiioOKVh/7331HWnUpxob1vnUpZ75mVfcPhs++PTy+X93Ch+
eCseu73Lu6BQih/HeZQ0cEpcSGXyg9/dGTRi6+RRQyl+jOe+0wdPGaAY7A2O
cbL8Ar/xN+Lm+2IcwPFr2190Nk+wJ444B+zNKLx7JcF3qSZOur76rY+3XjLU
keKHt1lDahY8ie5JftCPYqasfpO+xI7a4zp+S/gYpa45gzwjfttTTbtd+ivW
G8eZ6vdxVJRtFVW7l/UrbdA965MfY5hZPKe03pfqvS2vfNNqTpr+Y0n9aGSH
MYY9GixoAY72M08NWaJ7wMrl1E3T08XFZtS+aGbwpUdTGzmBo/0B40EpL60v
umr6l4LaN3uc1Gx0/DhncLSf3SZ9W6KDsbu/1K4atTeIr7gz27iHCzjax/Ya
N/tl5gd3V+k4etT+1UC7r7GdM1zA0f6Ks/MJY9dpHm4Sf0913kCrdn/u9P3k
Ao72589dfbM2fIOoS6qp/vta1H+dNO2p/qvu7PnGqH2OC9rjONVFHRPtwd2d
3i8+4Rru4ayJk8ZD98VnPo59NssFHO1X5yWe3T/E2qObxgO1715h2v7CSzlO
4Gj/6F/vAeE54W6a4yio/SKp7jyuGTjaB0l1UuOWqZrrSO3PVXVZ0tCkjjk4
2g/9mmum1z7VUvO7lrLxHJzXScV9KGsPrqU91TcNdALi9jw96IL7E7zKspen
EzJvuOE+BM/dW7OZp/UKD9xvVD/tnp12JOC+J+4r8IjsxxP6hJz2wv1D9ccL
g+Zf3tbOG/cJeKT9kdC97kHeuO7gF0RdFdcd3GjDwyLfJ729cX3BX+ds3NrC
6L0XriN4zz+O+a+40scT1ws8Waq3PnLGdQH/MGBhmEujKCv45/VTeNbCqb4Z
YThlfvLtuW7wDN6lspeqRfttHvAMHhjaM+34sQAveAafPG7GifbRp73hGXxZ
+vm95/X+9YFn8GuXPbqFflL5wjN43dP+t6ySR/nCM3i+qKvCM/haq5cJ/2X2
9IVn8J6pFauE27z1gWfwmNWXFph3wnVREPeR6q05rvAMPmmPo/s25yhreOb1
U3jWwum5Zj041+9pzlR3eKbnyOrCD0b913rCM/jnji8eX1s+2BuewXel37g7
Jz/VB57B/11h7f/RI438gK9tf+CyS93xSvih97LfVw/Ku7LBF37AAx9PrrZr
7TIf+AHPl+qkdd3hBzw7wMBs4d+3bOCH1z3hRwunecuGXsWRBz0WkB/wPS75
+71n7iQ/1H7uob7v48aSH/Daczd1cV6fQX7AHy1+UGflhUzyA74gy7x9pz9O
kR/wLt8bzC/y/EsJP+CrdB+H2BY7+sIP+FKpvvmd/IDvHm74qenHN7bww+uV
8KOFUz2x8HqtVdEZltRPwQc2GTA/Zlor6qfgm6dVmDI+Wp/6KXiv8Dm7djuN
o34KXtzQ895Dz6nUT8Hfds/aUFxsTd7Ab746s278gWfU78DNnvbbsaX6Fbqv
wCPW6Y2+uXwKeQP/1rCkXnnDE97ALzdsO8Oj+VY7eOP1R3jTwqk+qAwbvin0
eERzeAPvMOC+b/qmgy3gDfxtv8NXWw6f7gRv4Opvs4627PrQGd7Ar9z1sfM5
9ILmIeC2oxynN83d4orxDTwv1yC4xo+GbhjfwHfpNpDqkvAM/mBIxXdDEqzd
4Rl82D/L4lUTb9E8AbzzpBbBn4d984Jn8DCpXlnoBc/gXzx+q/3JIcsZnnn9
EZ61cFndEJ5ldUbhuey6m0LG4Rk85uSnf6r7NtCBZ/ALtW7f7n7niQ48g5/L
Sa9sfzJSF57BN/z416akLgnP4HN0tw6/E2KnB8/gFcZ9mWMQ268CPIOfdc23
aasyVMAzeLRUlzzWBJ7BdTt77J1S47eW8Axe0KmEj2gJz9wDPPM6GjzL6ozC
c9l1N4WMwzPn8Mw5PJddl1TL6pLwzDk8cw7PZbdXyDg8l30cS+LhUl2yljU8
g7vWurZmcDtncFl9EJ5ldUbhuey6m0LG4ZlzeOYcnsuuS6pldUl45hyeOYfn
stsrZByeyz6OpYzDsxYuqw/Cs6zOKDyXXXdTyDg8cw7PnMNz2XVJtawuCc+c
wzPn8Fx2e4WMw3PZx7GUcXjWwmX1QXiW1RmF57LrbgoZh2fO4ZlzeC67LqmW
1SXhmXN45hyey26vkHF4Lvs4ljIOz1q4rD4Iz7I6o/Bcdt1NIePwzDk8cw7P
Zdcl1bK6JDxzDs+cw3PZ7RUyDs9lH8dSxuFZC5fljeFZVmcUnsvOMytkHJ45
h2fO4bnsuqRaVpeEZ87hmXN4Lru9QsbhuezjWMo4fI78r0ZqsdJKreg9yqN8
uUqUJ9zTo2ZP2wtW6q8Jg3/JB75Jq/m4Y8/66rlv2534Oe/nKuqDjaXvAkrz
ezN319KPGmmtfhJQZVPMT3m8UyJvr1u35LuA0nxdxb/MGmUH26i7SPm0MMrL
dRV5pNZHOu07/dmR8nIjRPx7wtttP6pQUZ4tXsR/z6ntgPCcVW7wifht0q0P
lOTT4BPxI28Gn6EifuTH4PMUqzvA5+h1tpOT82qpE7+P/CV/9WF2g5gSf7b1
XvySv5ozomFyRxNzda1Wdxx+zl9V6dgoK9LWQj1MWv9fmr9a42D35a5rHXX1
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
8IzxbV3xoKKU+6Pc4Rn8m9+EP8++eET7dIG/D/DsE+IVQfvtgMeXn9vx27a+
tN8OeNiq674x+am03w74QEsTl5VbL5A38AUHa/p/be5I++eA+1+5OuNsQBTt
UwTu0rr/+7dFdWmfIvDDIapv7v0zaJ8icO6Nc3jjHN7SxXOz6cdZmbUD5pA3
8Curd+pdflBE3sB9XBadPDp8B3kDd9z+pd/QfhPIG/iRVsseB/+RRd7AH70u
qBU26jF9DwWevqVgx+R5O+m7GPDt0+eHTYvNoX2KwAu6vUr/UnMReQb3tR3Y
Mbd8C9o/B3xl0QXDgOGF5Bn85vMgp2n9c2mfInDumXN45hye8X1Q3dzcr7Eh
c8kzeJfFXwcurP2FPIOfbu98vqSuBM/gqdZ7phdFTiTP4FkG2V2ujr5LnsEj
p2a6zLjwlDyDD254vFOLkOXkGXz9g4OLf4+/TZ7BraPiGuTX2EqewV89NumV
6z+ePIPHt7lyf+mENNqnCFyzT9FftE/RaFZPgWfO4ZlzeB4k5icR1zTrqOEZ
PLJzz7nV1q+h8Rb8e5zJ2vm/t6XxFty/dsiNK86GNN6Cvytq0McpcTqNt+Bx
Afln3sYuovEWvEnj55ei1qtovAXfWb1uqxVLE2jcANdb8/3654HPabwFN/lv
39VPVxeSZ/A25d/FvEjK9IJncM0+RQdpn6JBrM4Cz5zDM+fwnCnqGmZS/WVE
c3gG3y3qNfAM3lHaD2op7QcFPleqy/xG+0GBa/aDUtN+UOAR0n5QGbTPJ7WX
9oOKpP2gKB5Rf4FncM1+UB/d4BncTtoPKoH2g6LfleovpZ7B05ln8AsOZnEH
2gTSPkXg3DPn8HyL1V/gmXN45hyeOYdnzuEZvJe0H1Qd2p8BPEnaD+qJDjyD
d5TqL1toPyhwO1F/gWdwzX5QKtoPClyzH1SRCTyDh0nrrvfSflDgG6T9oPzI
M7jx4NGmFYa2oH2K+PnCc0qZdRYbGYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmH
Z87hmXN45hyewTWe65Nn3h6e41k9Ap45h2fO4ZlzeOYcnjmHZ87hmXN45hye
OYdnzuGZc3jmHJ61eJNxeI5mdQd45hyeOYdnzuGZc3jmHJ45h2fO4ZlzeOYc
njmHZ87hmXN41uJNxuH5JKsvwDPn8Mw5PHMOz5zDM+fwzDk8cw7PnMMz5/DM
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
E00+DfGjfS+TCmZdD1n4/g+PsoGj
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyNorwjes9w26xqcKxoJXwmXi7a7H9K3iAE1o7WE9Jl0mvIX2oMK+TryeXz0
eknnNyus4caVnDt8kP4Nmp/CZ6wt/ZuitZx0/o3wYnhPaePoXIHixxui8zmK
v76O1nuKOzZG6zHFJtdH5xCkt6+Lzi0oplsWnTtqDG+AX8scF3wRrSsUFzwf
bTMPhNdE2+cD4M+iNYb08O7R+1Pn9Ohofav4tG5hG6S1WB+tG6XPtT6fwhVk
X6P3p87prdH5qyaMuTfaLjUv2XdVDT5L4ipcRyeWb9sIN4v20Yo9KyS/Lv80
KFp7K+atlMbLfzWPtpOKqW+LzpXtBQ+O1tWKqYdE62rFsMvh2+F94Luj7WRT
uG+0VlesfU+0zWwm3xittxUPNi+s0cdLZ0brfMXpt0fn3/ZW7AUfljlObxx9
FmTnj4jWfvpbaeP9g/M/LZL9Uj5IvrRlYvnWH3QWaF8u+bwNVTwnPZ05RnsN
Xpk55n01Wgsptr0mOoemeE3aTb8l/fZi9P5U3vX1aN2luHhttJZTDrZ20tI6
C8oldYWr0L4QHf8ql/tStK5T/FujsE2XX+5WslbvRXt4tB7WuegF75c5ByL9
pHO5ib/pHK3DlTNpl9vvT+H7L0r206NoOzGmaeYcQs9oLa14rVG0fZM/bRJt
N5S72yva5iinVz/aTspnPRmtE1rxtyuifVBL+Ilo3bIf/Gl0LKO48il4heau
ZDtTg+f6W3oqWp8rVm0QbVflBxtG2175wUei/X4LxjwcrW32lWNJ+1nackva
99r/VZOu0/6vz3w2k+9RfCqbHuxv1Mp3a09USeN1jqTl5DNlv54peaz8dr3g
XLt+awP3G0j7h/xb8HOoX5pT9nM0V63ke36H1zHuPdoSbQ/5ftle2t6l5Cu1
r5Id/kiaILdG3UzbpWTb25n2eD6Pha/hb8pz7YC3Z35evb/evX3S59LpFZJd
/UL+KlgHbdJZivbPuqf0kf5ue+77iKUdqqf3kq3YLVhzq6t2cOz6F1wnPcff
mXW/xkiT103vXjnznBVpfuqxFnXTufsx9zxpD/yVpznMrcXUr++3p2dTv+7z
W+66R5HWQu+Sp/v/H5fSb7VMGkZnf0LuXP2taT30bNIDijc/4bs3Su6rlZ75
kKThpeX7czUM1vPaRzo7I4N9pNb619y5DGlvnfP3StYK2m/touNc5e6032um
5+yXe/4vSXa3Utqre6T53JB5TsVaX8215ly5gkEla6xh3PvPzPfdlOa+Ylqj
itH31P48ODoeVy5R2n9g2r8xOi+e0/6bO2cwOf3+Hmlv6Td3D85T5Gm84vf+
ufNpc/mufTpTuq+4bTpXx6S9fUTJ76n31frJB9VLa6Q5116RPmvPfRtkzoVO
D84bFNG/r+d4N7M+/y2dHelZjZmenrlOmjfNg/brzvT8tdPf7s+96mTOr8qG
Kw7X+7wRHUcr5zkKPi5zHm9GtH5Tjey8aF2nGpliptXwT8H6XHt1Kt+35WqZ
OYc/M1q7qtZ2WLSOlhA+NFpjK+89PVpfqTY3Lfpcq/Z3brQ9V02wNb/RJs2F
dLLWVGt7XnBeegd9Hfh8UOb8edu0HlqLd6JjnDbcZxZ8cua6m2pIyvPUiq4h
SYspF6T4sHX6rY+jYw1prXVpzjX3+0XHcao1tIqO+1RreDM6R6EcsrSedJ7u
f2B0HKQawb7RsaFqIl2j42vVOGQPtC59guPSXaPj1BbRMaDqKcoB64ypvtAm
Wt+qbtIxet8q966azPZkM5WnW5ueWTZA/laxcutonaz6y4CkBxSXtYyOMVVP
OShaV6tusjXZJdknnbs2aT//XHIdTvWyWLiGJ21WvnC9Slpo18I1SPmpCoVr
kPJfY6NzaKp17p3WS+elWuG4XRqyZuH4/yA4L1zPkxYNheuC0rqlwvVLabNa
heP21tIbhfMFWvetySfJl1UvHD9Lr5YpXEuTTitXuPYpPVm2cF1NOq0oXDuU
BlMeRffRXq9aODaWH69YuJ4qvz86Oheq+m/btAcnpD2ptVOsfHZ0jKBa9lnR
cYRq3MoXyR7LFitHJG2lPKdqkrPgh4O1kDTORYV94lfwhXD/6DyealLy11vo
v6Bwfkl2UfnAxoX1kPRPlcIxvHRL5cKxvbSKcnmyq7/TjuGeR2aucZ8ZHd+p
Xn9GdPyoWrZinMZpvx6VfIR8hc5Rneg8zU+5/Y/qk+ui8wNaU+VvdH51judF
14iVY+8enVtWjW9xdK1WdRzlLuRXlUuRj5PPUW5jfnS9WDWFgXCfzHU65U+V
n9H/r7gyuhasGl8PuEPmeqLOWvO0N66KrkHXTXuyaVq/i6Pz9qoRXBSdz1dd
Q7l4aXW95yXRdW39/5BeSa8ql3JhdD26Uun/9dYPye7uk2xvv+QPNOfSqdKr
CgqVF5AWK0XP4T+Z13V2dL27YtJOsn9zC/sv5TaUYx4QnbNVzfH96Byd6lbv
RedIVf96N9qGL08aslnSOfJn8mvaWx9G1wJUG/oguhag2tPI6Fy06kHdonOD
qpMqZySbo9rKW9H5W9Xd9Fx6J+Vgro7+/waq0/WJjgVUJ30Ffj7z+Z0TnZNR
TWfv6Jzb1rTHNB8LuE+dwjk75RMWag0y122lWxoF17xCWl/pwsui/y+B6r/K
Qyie/Tutg9ZD521B9P9JUB3q0uj/w6AaceXkXyYy7n/j6Typ
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmgW4FVUbhWf2DHZ3KyZ2JxY2ICq22AgodhcqFrZid3d3d3d3d3d3/O/7
r3keR+Y9e+65557Z+/vWWnt6Dt5p7R1LVVXn8L+Wfxduqmpa/p0Hfo0XtuNY
Ft6rrqp5e1TVBIzPxfmivPYf12zL+DKc78lr8zC+IONTw3Mx9gpjC8HTwHPD
r8LzclwDv8P143P9mowvCa/K+MeMreD7w73h9+E+8JzwUvB78BTwgvzsLrx2
Af9OAs/Pv4vAb3HNA1yzJedT8vpo3n81+D94JY5BvDY+xxxc/w38F9fPyfjF
nL/Ca2Nz/drwfJyvyGsbce0sHONwPh3XPsnYcI4l4F25Zm6un5nxseFpGX+C
sbk4LoFfZXwcxldkfG54acY/YGwleB54GfhDeBF4Onhe+HV4UXh6eD74DXgA
vIqfHz6e95sbnhSeBX6e8cM5toXP4vf1ZXwXeDV4JLwwvDO8KnwAvBB8KDwM
Ph1eBT4EHgqfBq8Mz8P7TwbPyvu/4N8DTwLPDD8HH8axDXwm16/G9TMxPiY8
FeOPMTYdzH/VZPBD8O4ca8CHcv1iXL+bfxN8iHMIPhgeAp8KrwTv1Obv3R9e
EF6KN5sZXoj3e5Oxgzi2gk/xHjE+A+P8U03B+COM1fAMjM3IUThfi2Mpxldj
/BPGJ/L7dy5zTMz5Hry2JuOj4MV5o13h1eGDnVPwPlyzK7wNP38oPH2TdTI5
/DAnvZ0jrhv4LXhpeFZ4Efht1wY8G7wo/A68CbwevBZ8BO+3Pa8tB+/N75sP
3tE5D+8LLwBvAC9VZ86v02Z+One/5liO86l4v4X9buGd+XdveDDnH/P+o/j5
EVyzMXwcY8vA+/kZ4NHwsvC33XodUGf+7suxIXwMvLTzDb7KtQWP6/yAr4bf
hseDZ+Xnx4Wn5/c9xdieHGvBhzG+BOMHwJvBJ8DLwwO5vjfcl+s/ZawfvBC8
AvwRvA/HBvDRXN+b6/eG14ePgpeC5+P6KeDZuf6lNt/PQnX+5vWdmxyLc74L
r83F9QfCW8AnwSvAo+Ct4TPgVeEZeb8xrBe836OM7cCxPLwP4/MzPhLeHD4R
7gN/w/VTWq/qzPftmszfTfj5Qxif3RoDzwg/w/hs8HjwDPDT8F5t7v+R/PyS
XL8/vCl8PLwcPA3XW48n5X8PWi/hyeHZ4Bfhr7u/f+U6n3djjomtJ/D0/Pzr
jD8IP871U8N3NqlvV8ITw3fAF8FXwBPBt8MXwpfDE8KXwydaH+Ax4Rfgu+D7
4SnhXvBM8EzwdD1y/5yvfaylzueuFrvGJnSuN1n//Uv6h/WkJ9yz5PM+Dt8I
3w5PDu/Q9ZYvu3q+WpP1sRznczDet8n9WR7uBa/SpD8tC88Or99kPa9esp5O
hw+Gj4D/4bs6GT7A+gP/CZ8NH+Z8h2uufwK+Cb4DngJ+t2StzeZ897vhZ06A
H4LXZfwE+Hj4QdcnfAHXHO395OcKfBF8rPPH/gpfCB/jeoAb+GL4OOcn3MP3
g0fAB8K/8d4nwvvBB8G/w6fAI62n8F/wSfD+1iv4D/hM+FDXC/wffBY8yvXk
pOL9z4APcf7B/zJ+E3wOfGFJP74KPsV+UtK/roRPtt6X9MdD4B3sf34v/Pyx
8F7Wa/hX+GB4e9cf/BV8ILydtQn+En6gST25Hp6E9zsS3s31Bv/I+FHw7tY/
+Cf4aGs0PAL+GT6iq8d7wz+4NuG+8LrwZ651uB+8Hvw5/GCTenUDPCm/7wjv
GzxWnRo8ivGd4N05/5brD4V3hHeDv7HfwTvDe8DftelHC8ILwjPzfkvCC8AL
wD3hxdUj8PzwTPAaTfrvyiX16Ab4LPj8knqq/rFfr1KiJ26Ez4YvKKmvGzSp
pwNK6tEV8EnWL3gseJ0m/bRfif46ic94muufv289+BjG94T3Y/yXTk+pX5aE
Z2N8uSa9Y3F4FvsvvBG8JfxFmz5rv/2xq3ELqJ8478X5DFy/fJN6uwQ8K/ya
Oq5KTVaDqQd7wXPy+ox+P7znh/B78IHwcfCR8J3eD9crfB78AjzIegTfDn8B
bwvfDw+sshaPhS+Bb4E/ZXxr+FL4VvgzeBv4Mvg2+HN4uPMZvhP+Ct7e7xO+
w3oDb+f9gnty3oP3P9L1Cd/A+Ee8Ngz+w/vC+Ue89jvn5zF+Zdcft2R8LPVK
HQ1qzzmb8cs4f53zzRg/F74CfhPewvoAXw9/CA+Fz4Evh9+AN+9+37jdnF3T
c/VFne94bM634Vib83GsK1x/Lz//Atxw7cge0bxq38a6BA/n33W8n4wfDn9t
HaxyjzfmfJAaifPeder7pmqMKvrA+zdEfQxvXafeDm0z37epU5+HtVkPw+vU
5y3a1PtBddbL5m36x0Z11svgNvNpyzrzZzN4RnjDOutndT7vyvCKfLaj4K3b
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
B9eU+Onrm/jvc0v8z61N/OIlJXmD+Yx+/rwS/3R/k3zg2hK/bn5lfnBdid+/
rolfd/9Mf2Keal5wWYlfe6yJn7m1xN/v2CR/3rwk396hyX7MZiX59vZN9mM2
LcmH92qSP21dkl/v0SSfGlqSp+/ZJL8aVpJP794knxtSkifb0+3lh5X0+tua
5A2XlvjL3ZrkdVuV7Ac45537W5Tk/7s0ye8Gl+wfqFGv7OaH2vWaJvnG2SV5
0/lN/OVxJXmOGaheVE9qNmrm+XSdDMws1Mzz2ToZpFmoGexjdTJIs1k9k97p
girZtJnXy3U8lVmYGZrZi/fMe2dm6d7bxVWyTDPXZ+pkamaxZpju9V1UJds0
Y3Mvw0zS7M0M1L1JM0Oz0XOb+M9jS/y5eyQDOn1hvzQj/rlO5m527Gf0s55W
kg+75lx7h5fkCX4HfhejS/y4GkstdUqJ9rqsif8/tSRPNuM369fjuldhZmp2
5Rx0Lpppfl0nozfrNEPX+z5QRcub+X9SJ9N2L8CM3yzLOepcdQ/g4zoZvHsD
ehTr3/Aq3uWpJv7/zpJ8TU/i3qFzWK+ip/ux+316PT2E3t45r7fQk5zR1VO9
yq7d53uw60dqJr2/a1gtpQY3m3GNq83VPF92f69aSA9oVqFm0hvq4cwm1Ox6
OzWRWZ9rXq20ffd93dXVGz2j2YYaSi+pBlWLrlGy3yar1d/p9OG49v8qNd/a
P1mbXmPNs/ZN0kaLWyOtlZO2qYXWSGvl5G1qrT3KXqVm13/vWaLl1TiKcz2Y
2mfiNrXWmmxtHr9Nr7AmW5vHadN77DH2mona1G57iL1kvDb3zntoL5ugTe+y
59h7JmzTa+xp9ra/mvQSe469R01mdqNnV6upec1O1LhqYWuuWZo101pszTVr
s6ZYi61xH3bzy9o3stMfL1bRevoPPZt7mPfBfTkWrePZ122TUZgbmx+bXaj5
1f7ugbq/N6ybvzd281v/uHKV91iP8SXbZLNmFGu1yUjMit2/MTvZsqsXV3Xr
xzltdmzPca5b49/s6om1f++uX6mf9Q9qdLNoe4La3cziz66fmWWocc0K9ZRq
XzMQs0I1vNmImrh0ekytrMc0q7YH6j3teWZL1lR7oT3R7NgeY6+0h5kN28Ps
bfYss3Jrhr1sk65eXtitb2v8i139tPabOfars4dpFvlnE62hZlA7/N1Ea6gx
1Bp6AL3nySXeYPY23sCabe2erU3ttsZaa2dtU2ut8db6WdrUenuAvWBm+NQq
Nd5av1Abb2ENs5Ytol6pUlOtrT3b9AI1q9pVjzhDFQ2uFteT6EVuLPEq3iPv
1fMl3m+mNlpXjavWnaGNtlUTqY2mbqP91HBquQXUM1VqprWzV5teYc+x98zf
ppZaM62dC7apLdYYa/N8beamc9Rau3CbWmfNszZ/18Qr6BH0CtO3+X7VrGrX
adpoUzWp2nTGNtpcTa42n7aNllXDqmXNBKw/o0qygunaaF81r9r3jyZaUI2o
Vly0zffjnFaLLdZmbbpG9Qq/NNHmehS9ys9NvIUeQy/0bxNvpWfSO/3aRLur
6dX23zfxBnoivdEPTbyPnkHv8GMT76Qn0hv9A89bReOqdf9r4tX0cHo5MxDn
6hxdNvJbE2+gZ9A7/N4kK9Ez6B18OEOvpOfT+9VtsgE9lF5qzDbeTg+oF+zB
sXQVj6JXadt4FT2MXmaKNl5Dzax2nsoaXsWT6E2mbONN9CR6Ez228/mBzns3
bbyQHkmvtGz3eRfrsouxOfpX8YB6wdLGS+m59F5jtfGGelK96Rht+pMeUa/Y
v/u+3Gs3azKfMqc0rxzQ5pkhnxFxj85nicxX3MdzP69PG43oswdmYmpHNaDP
hui51YZqTJ/dMFNUe6oJ7T32ILWimtBnS/TkakU1jr3PHqj2MQP12SQ1pH7C
PXmfdVm+yl69zwT4bJl7/D4roIb1WYstqmhbPb7P4rjHqff3GSafZdK/b9ZE
E7vPtmUVrWwG4L31Huu/3BP12TSfEXCvVM3tsyX6M7W4mt29BTWrWt7+4Xdn
Brl6mwzfZ5HcwzXb9zXHzIiX4nyZNvmRz5i5/+Eer8+e6Jfd+1XD+WyAGlBt
556Va8c1pL93z8q16RrVX7sH5l6Yfs69VTW1e7lqULX2wDbPLvmMms//qDGt
ZdY0tad7yM4d55D5hh7HvR41p97HPTv37tyz89kJ9+jcqzP/8NkK9/Dcy3MP
z2cvzJx9NkyPYhbtHrTPxvSpsjetZnIuOifVTmY0PtvlMx9mN3oan93xmR69
jpm1zwapucyyzVfdh3c/vl+bTNo95yFVsmr1gWPjdv3dzNKszu/c7/4zrvmn
SoakvvB5P7NZ96TcmzJT7tFpBLWCeyhm1O6nureyfJu18GfH5pU+62WmtqL1
ltc+q5Jx9W7Tf8wqv+BYuk1+a5b9C8fKbTyCe3lm+noHPaS9zx6oPzGD91m3
oVWyeT2Se9/mB3on57Tf1dolc10P6LNC7inpDc2sfZbOZ1zMsvUQ9i57mN7C
zN9n2XxmwL2A/wFNfiw0
          "]], Polygon3DBox[CompressedData["
1:eJwt12WgFdUaBuB9NhxAysRAEZCSRkFUOqRDuruV7u5upLu7u1tCkFIRrwEW
cNGriF4DFcVnufeP7+x5n/l2zMxaa+ZkbtW1VpdoJBJ5VyWq7EkjkRngSEIk
MlVelSQSeYBVYr1ZMVaLPccmsb1sLFvEKrA/bc9kN+wrK7+pKtsewaraV0ff
UZbcawrVgrX3most0Hda32y2ke1nl9mD6ir7mnVm1eTR+l5n9Vgjlok1YBlZ
TnaMpfP6uOrG+obvYxX19dJXlNVkHVkVNpJVY7XZAfYhe0hdY9dZS/ay3FVf
F3VNzqams8PyFH0r9WVh09hBNoktZ5nYBLabjWYL2BusPBvCKrDq7Fk2ju1k
I9k81oq9wrqxwqwky8wmsj1sDFvIWrNXWXf2MivFOrBybDArz6qxrqwmG8/q
siYsK3uLHWKT2QrWiVVlo1h1Vpc1ZplZQ5aJPc/asVKsHyvJKrI2rATrw4qz
Cqw9K836s1KsEmvLSrK+rAQrzzKy8WwXG8XmhzHCXmBvsALsVdZQlbV9m/8Q
xqueB1UP24vDNbJvlJ7mrADrwPKzl1lv1pC9xZqxtqwXa8CmsaasDevJ6rOp
rAlrxfqxZmwOa8s6safYMLaRDWLTWV/WlM1mbVhHNop1YmtYbzaIjWVd2XrW
nw1nY1iYlOtYXzaEjWad2VrWhw1mfVgjNp01Z+3Yo6wfW8l6svGsB6vHprDG
rDXrz5qzuawd68wGsdZsIevIurPBrA1bxDqxnmwIaxs/z51ZLzaQtWIL2Jus
BxvK2rEl8evRmw1nb8R/Xw/Wnw1j7dlS1pX1YQNYCzaPtWddWHo2nG1ig9kM
9gjrzZax7mwsG8k6stWsFxvIRoS1iK2Kn5cBbAIbyvaz8WwqG8+GsH1sHJvG
0rBu8fMSzsGIsKawWmwCq8easnGsL9vOtqk7cgY1im2Vh+mbra8Lq87GsBqs
PsvB5rITbAZbF0yltf0x/yTMzzCmVE7bLfXlsK+AnsPsFvtGfcFusmfYSHmL
vqFsFsvJ5rNTbBbbwJqw51mLMIbU5ZDVPHZSnqlvvb5mLD9rz/KxV1gpVsf2
OPa1faXlfeoD22nVZ/Z9pW8iGyMf03dU3Qv3DjWWHZen6Zuj70k2OD7u+7Ep
7DHWP37dwrWcwNKxAfHrG+bRRNad1WYTWX3WLKz9bGB8voU5M4k9xHrGx2QY
a6PZ02wE28yGhPsXe5j1io/JcP8Yw55gg+JzMMzLyeH6sO7x+RHmwki2l73P
0qhP2ZcswgrJTfVlE4uzb8LxsRIJ/+6OZJAX29gcriXby46wJWwL+5btY0fZ
IraJ3WJ72GG2lO1gt9n36jE39Pu8IGsiZ9VXLKyd+tKzKqyyekd+SR1l38kH
9b2vbxqbGY1ds3Dtavm81Kwlmyw30tdN30K2kf2X7WYHWTJWhnVkBVkVtozt
DOs1O8ROsHlsNfuSbWG72Uq2h/0Uxgs7zRJZcdaO5WXl2Hy2hn3FtrI9bAXb
zX5kR9gpVpi9w35mb4f5xFax/ewXdoKdY+vYYfZ7OCfsIlvOdrE77DA7ydaw
g+w3doqdZ2vZIXaXnWYX2Gp2gP3KToZnLDaXrQrzlG1mu1idMDbCvUP9Zl9l
OZWqa3s4q6Kvpb4X2NYwr9hGdpyVYdfZ99HYs1d4BisU5qF8Q99Odlbfi2xb
eI5im9jbrEaY6/IXPKlcLdy31VX5YTmvfTXDWqWSyXf5195bJGlsresjL9ez
Ioyj8PAYnmFs34/GnpHCs1JBfXvl67Z3aDmjJw9bxs6zRWwHa8AeYUXZQ6xo
0tgzV+FobF0K61OWxNhaMjoaW1/DOlstMTaen2IV5Urq6cTYXNjOrsmfq1Zs
DlvBLsqXVEOWMqxhbFg4Bt/bwm/JzZayc2wh284KsPXsClvFDoTzw5azC2wx
2xlfT3NEY/MqzK9nfUc+tpZdDudK3z59+dk69iFbyfazDexYNDZ3wxzu7L3T
2Rz2vrxU3xp9SVkx1pblYa+x78P6ycqzFCyz/F1Ys9hrLDnLJG/33ndZsvDd
7FN2O6yBclV9KVkW+c9wnVht9gwrJP8Rzg2rGc4xKyj/pfKx+uFYWWH5Xjg3
rC7LwF6Sf1e52OssPXtR3uG3nGPJw3lln7Gd7LycQn3ErrJt7KycGM4h+4Ql
hDVLbubzsrMS7Ntwb2ClEmL/yzwr/y/cB1gZloxllG+F5yRWLOHfIRt5xp89
Pu89llqlUul9wN9h3thuHMZeGJPybn0XWUr1MfucbWGn5IQwttgVtpWdlqPq
EvuIbWIn5Ps+7zy7zDazkywSxpGXD9kudkF+QP2HXWPJWQW5p/cWYTXYRvY2
+5udYx+w31Q2Vo49zvLJb+mbzd5jS9jqJLG5sDIamxthjqR1vFFWhLWWc+kr
o28Km8LOsLlsMZvNloRnEraObWWT2WT2DpvDlrCpbCo7y+axpUlia0VYM27y
/7MO0dh9ZlY0NifD3EzmtyRhRVkbObe+svFrdIndY3+p/voOsithvQrHou+G
vllscbg+etayLWwGWxjGFFvNNrMfwnMSq85SsazyHZWB1WCpWTb5x7CusVos
Dcsu/6QysjoJsWe08Kw203csCteMrWGb2K8qKyvL0rG88s/qOVaSPcpyy+u9
9wj7g51hl+LrwfFo7FjDMT/peO/y7KyC/IS+/PIvKgsrHe75LI+8wHs3sJts
FzvE/gELaf6z
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jsox1EUB/Dr/fZn8X5kNDDKgCTPSJIMTJgYkIlJMjDJxCQTk0xMMjHJ
5P1+TMIsFOXzK8O5n7PcvvecbsXwRO94XAhhXhVqoj7L8cLihBByWMly1rKa
baxnH7s4wkFOcYxznOEyF7nOVW5zk/vc5TEP2ZIYwgdL5J4ynz9MjA/hjEk8
ZzIvmMJLpvKKabxmOm+YwUx1G83CO2bznjE+MIePzOUT3/jJUtnPLOAvX7zx
hNc84BF3uMcNbnGFa1zgEqc5y1FOcoBD7GQv66KZWcUalrHODl5ZJDfGPH6z
n9nRrpkV3Wcme5jBbqazi2nsYLtK1bcyhc1MZhOT2EhxoYEJUTaNH94dX///
4A8fnDfr
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{795, 1083, 1112, 1409, 794, 1218, 1000, 796, 1219, 1001, 797,
        1220, 1002, 798, 1221, 1003, 799, 1222, 1004, 800, 1223, 1005, 801, 
       1224, 1113, 1307, 802, 1225, 1006, 803, 1226, 1007, 804, 1227, 1008, 
       805, 1228, 1009, 806, 1229, 1010, 807, 1213, 1230, 1011, 1084}], 
      Line3DBox[{809, 1114, 1308, 808, 1115, 1309, 810, 1231, 1012, 811, 1232,
        1013, 812, 1233, 1014, 813, 1234, 1015, 814, 1235, 1016, 815, 1236, 
       1116, 1310, 816, 1117, 1311, 817, 1237, 1017, 818, 1238, 1018, 819, 
       1239, 1019, 820, 1240, 1020, 821, 1241, 1021, 822}], 
      Line3DBox[{824, 1118, 1312, 823, 1119, 1313, 825, 1120, 1314, 826, 1242,
        1022, 827, 1243, 1023, 828, 1244, 1024, 829, 1245, 1025, 830, 1246, 
       1121, 1315, 831, 1122, 1316, 832, 1123, 1317, 833, 1247, 1026, 834, 
       1248, 1027, 835, 1249, 1028, 836, 1250, 1029, 837}], 
      Line3DBox[{839, 1124, 1318, 838, 1125, 1319, 840, 1126, 1320, 841, 1127,
        1321, 842, 1251, 1030, 843, 1422, 300, 303, 786, 234, 298, 782, 286, 
       1418, 844, 307, 1424, 845, 1128, 1322, 846, 1129, 1323, 847, 1252, 
       1031, 848, 1253, 1032, 849, 1254, 1033, 850}], 
      Line3DBox[{852, 1130, 1324, 851, 1131, 1325, 853, 1132, 1326, 854, 1133,
        1327, 855, 1134, 1328, 856, 1410, 1086, 1105, 1087, 1106, 857, 1215, 
       1408, 1079, 1085, 1080, 1099, 1096, 858, 1419, 1101, 1104, 1081, 1100, 
       1082, 1102, 1417, 859, 1109, 1097, 1108, 1098, 1416, 860, 1135, 1329, 
       861, 1136, 1330, 862, 1137, 1331, 863, 1255, 1034, 864, 1256, 1035, 
       865}], Line3DBox[{867, 1138, 1332, 866, 1139, 1333, 868, 1140, 1334, 
       869, 1141, 1335, 870, 1142, 1336, 871, 1216, 1421, 1103, 310, 872, 
       1420, 292, 297, 257, 873, 1415, 258, 261, 259, 1414, 874, 1088, 1089, 
       1411, 875, 1143, 1337, 876, 1144, 1338, 877, 1145, 1339, 878, 1146, 
       1340, 879, 1257, 1036, 880}], 
      Line3DBox[{106, 411, 107, 412, 108, 413, 109, 414, 110, 415, 111, 416, 
       112, 417, 113, 418, 419, 114, 420, 115, 421, 116, 422, 117, 423, 118, 
       424, 119, 425, 120}], 
      Line3DBox[{882, 1147, 1341, 881, 1148, 1342, 883, 1149, 1343, 884, 1150,
        1344, 885, 1151, 1345, 886, 1152, 1346, 887, 1217, 1423, 1107, 1111, 
       1110, 888, 1413, 1090, 1095, 1091, 1412, 889, 1153, 1347, 890, 1154, 
       1348, 891, 1155, 1349, 892, 1156, 1350, 893, 1157, 1351, 894, 1158, 
       1352, 895}], 
      Line3DBox[{897, 1159, 1353, 896, 1258, 1037, 898, 1259, 1038, 899, 1260,
        1039, 900, 1261, 1040, 901, 1262, 1041, 902, 1263, 1042, 903, 1264, 
       1160, 1354, 904, 1265, 1043, 905, 1266, 1044, 906, 1267, 1045, 907, 
       1268, 1046, 908, 1269, 1047, 909, 1270, 1048, 910}], 
      Line3DBox[{912, 1161, 1355, 911, 1162, 1356, 913, 1271, 1049, 914, 1272,
        1050, 915, 1273, 1051, 916, 1274, 1052, 917, 1275, 1053, 918, 1276, 
       1163, 1357, 919, 1164, 1358, 920, 1277, 1054, 921, 1278, 1055, 922, 
       1279, 1056, 923, 1280, 1057, 924, 1281, 1058, 925}], 
      Line3DBox[{927, 1165, 1359, 926, 1166, 1360, 928, 1167, 1361, 929, 1282,
        1059, 930, 1283, 1060, 931, 1284, 1061, 932, 1285, 1062, 933, 1286, 
       1168, 1362, 934, 1169, 1363, 935, 1170, 1364, 936, 1287, 1063, 937, 
       1288, 1064, 938, 1289, 1065, 939, 1290, 1066, 940}], 
      Line3DBox[{942, 1171, 1365, 941, 1172, 1366, 943, 1173, 1367, 944, 1174,
        1368, 945, 1291, 1067, 946, 1292, 1068, 947, 1293, 1069, 948, 1294, 
       1175, 1369, 949, 1176, 1370, 950, 1177, 1371, 951, 1178, 1372, 952, 
       1295, 1070, 953, 1296, 1071, 954, 1297, 1072, 955}], 
      Line3DBox[{957, 1179, 1373, 956, 1180, 1374, 958, 1181, 1375, 959, 1182,
        1376, 960, 1183, 1377, 961, 1298, 1073, 962, 1299, 1074, 963, 1300, 
       1184, 1378, 964, 1185, 1379, 965, 1186, 1380, 966, 1187, 1381, 967, 
       1188, 1382, 968, 1301, 1075, 969, 1302, 1076, 970}], 
      Line3DBox[{972, 1189, 1383, 971, 1190, 1384, 973, 1191, 1385, 974, 1192,
        1386, 975, 1193, 1387, 976, 1194, 1388, 977, 1303, 1077, 978, 1304, 
       1195, 1389, 979, 1196, 1390, 980, 1197, 1391, 981, 1198, 1392, 982, 
       1199, 1393, 983, 1200, 1394, 984, 1305, 1078, 985}], 
      Line3DBox[{999, 1094, 1407, 1214, 998, 1406, 1212, 997, 1405, 1211, 996,
        1404, 1210, 995, 1403, 1209, 994, 1402, 1208, 993, 1401, 1207, 1306, 
       992, 1400, 1206, 991, 1399, 1205, 990, 1398, 1204, 989, 1397, 1203, 
       988, 1396, 1202, 987, 1395, 1201, 986, 743, 1092, 1093}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{316, 531, 1218, 317, 1309, 545, 345, 1313, 560, 360, 1319, 
       575, 375, 1325, 587, 387, 1333, 599, 399, 1342, 611, 412, 624, 1258, 
       427, 1356, 639, 442, 1360, 654, 457, 1366, 669, 472, 1374, 684, 487, 
       1384, 699, 502, 1395, 714, 517}], 
      Line3DBox[{318, 532, 1219, 319, 546, 1231, 346, 1314, 561, 361, 1320, 
       576, 376, 1326, 588, 388, 1334, 600, 400, 1343, 612, 413, 625, 1259, 
       428, 640, 1271, 443, 1361, 655, 458, 1367, 670, 473, 1375, 685, 488, 
       1385, 700, 503, 1396, 715, 518}], 
      Line3DBox[{320, 533, 1220, 321, 547, 1232, 347, 562, 1242, 362, 1321, 
       577, 377, 1327, 589, 389, 1335, 601, 401, 1344, 613, 414, 626, 1260, 
       429, 641, 1272, 444, 656, 1282, 459, 1368, 671, 474, 1376, 686, 489, 
       1386, 701, 504, 1397, 716, 519}], 
      Line3DBox[{322, 534, 1221, 323, 548, 1233, 348, 563, 1243, 363, 578, 
       1251, 378, 1328, 590, 390, 1336, 602, 402, 1345, 614, 415, 627, 1261, 
       430, 642, 1273, 445, 657, 1283, 460, 672, 1291, 475, 1377, 687, 490, 
       1387, 702, 505, 1398, 717, 520}], 
      Line3DBox[{324, 535, 1222, 325, 549, 1234, 349, 564, 1244, 364, 783, 
       1422, 784, 785, 733, 1410, 734, 780, 1421, 775, 776, 403, 1346, 615, 
       416, 628, 1262, 431, 643, 1274, 446, 658, 1284, 461, 673, 1292, 476, 
       688, 1298, 491, 1388, 703, 506, 1399, 718, 521}], 
      Line3DBox[{326, 536, 1223, 327, 550, 1235, 350, 565, 1245, 365, 731, 
       786, 788, 787, 732, 750, 751, 1408, 735, 763, 781, 762, 737, 778, 1420,
        779, 777, 727, 791, 1423, 789, 790, 417, 629, 1263, 432, 644, 1275, 
       447, 659, 1285, 462, 674, 1293, 477, 689, 1299, 492, 704, 1303, 507, 
       1400, 719, 522}], 
      Line3DBox[{328, 537, 1224, 330, 551, 1236, 351, 566, 1246, 366, 767, 
       782, 769, 770, 771, 1419, 772, 736, 753, 764, 752, 758, 754, 1415, 755,
        738, 766, 765, 749, 740, 1413, 793, 742, 418, 630, 1264, 433, 645, 
       1276, 448, 660, 1286, 463, 675, 1294, 478, 690, 1300, 493, 705, 1304, 
       508, 720, 1306, 523}], 
      Line3DBox[{332, 539, 1225, 333, 1311, 553, 353, 1316, 568, 368, 792, 
       1424, 580, 380, 759, 1416, 592, 392, 739, 1411, 604, 405, 1347, 617, 
       420, 632, 1265, 435, 1358, 647, 450, 1363, 662, 465, 1370, 677, 480, 
       1379, 692, 495, 1390, 707, 510, 1402, 722, 525}], 
      Line3DBox[{334, 540, 1226, 335, 554, 1237, 354, 1317, 569, 369, 1322, 
       581, 381, 1329, 593, 393, 1337, 605, 406, 1348, 618, 421, 633, 1266, 
       436, 648, 1277, 451, 1364, 663, 466, 1371, 678, 481, 1380, 693, 496, 
       1391, 708, 511, 1403, 723, 526}], 
      Line3DBox[{336, 541, 1227, 337, 555, 1238, 355, 570, 1247, 370, 1323, 
       582, 382, 1330, 594, 394, 1338, 606, 407, 1349, 619, 422, 634, 1267, 
       437, 649, 1278, 452, 664, 1287, 467, 1372, 679, 482, 1381, 694, 497, 
       1392, 709, 512, 1404, 724, 527}], 
      Line3DBox[{338, 542, 1228, 339, 556, 1239, 356, 571, 1248, 371, 583, 
       1252, 383, 1331, 595, 395, 1339, 607, 408, 1350, 620, 423, 635, 1268, 
       438, 650, 1279, 453, 665, 1288, 468, 680, 1295, 483, 1382, 695, 498, 
       1393, 710, 513, 1405, 725, 528}], 
      Line3DBox[{340, 543, 1229, 341, 557, 1240, 357, 572, 1249, 372, 584, 
       1253, 384, 596, 1255, 396, 1340, 608, 409, 1351, 621, 424, 636, 1269, 
       439, 651, 1280, 454, 666, 1289, 469, 681, 1296, 484, 696, 1301, 499, 
       1394, 711, 514, 1406, 726, 529}], 
      Line3DBox[{342, 729, 730, 1230, 343, 558, 1241, 358, 573, 1250, 373, 
       585, 1254, 385, 597, 1256, 397, 609, 1257, 410, 1352, 622, 425, 637, 
       1270, 440, 652, 1281, 455, 667, 1290, 470, 682, 1297, 485, 697, 1302, 
       500, 712, 1305, 515, 1407, 744, 745, 746}], 
      Line3DBox[{516, 713, 743, 501, 698, 1383, 486, 683, 1373, 471, 668, 
       1365, 456, 653, 1359, 441, 638, 1355, 426, 623, 1353, 411, 610, 1341, 
       398, 598, 1332, 386, 586, 1324, 374, 574, 1318, 359, 559, 1312, 344, 
       544, 1308, 315, 530, 1409, 728, 747}], 
      Line3DBox[{524, 721, 1401, 509, 706, 1389, 494, 691, 1378, 479, 676, 
       1369, 464, 661, 1362, 449, 646, 1357, 434, 631, 1354, 419, 616, 1412, 
       741, 404, 603, 748, 757, 1414, 756, 391, 591, 761, 760, 774, 1417, 773,
        379, 579, 1418, 768, 367, 567, 1315, 352, 552, 1310, 331, 538, 1307, 
       329}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnXk0VX0b90VCmSokU2ZljAyRzhaKkjITEiGVVIoKlbFJGRtMyZhknsfj
bEPmeR4zZSwcyUy8bNvGWat1D0/3cz/v+/KPtb5rr31+v2uPv8/3uq7NcvGG
ijE+Hh6eOyEeHsHSf3SZSJr4Z/XoQI33XRJL//Ggv1FgsYxwRp0sNzZReSD8
UUR+7KpuU9WcXtxZEJ+q9faHS3JV/Kqe4CGkSll/NdH40pOoHf73Elf1xORu
3R9RMUlR1ijKKxW5Sau6iyaVeQ69ezKlTTn/3fbo5FXdYStd983gbSk5XHnF
5x+Lpqzql/aPObtykYtGVA0Jivqor+m77vAXTReJfH5edq474AuyH/n45u/a
O6WEH+TXU8yzA8jvyr549N3sTSd/2iGCN1jn3JhV/Tlq+mu33ke6z63GeC5W
Zr6r+sp/PLuN//+6Tt9K+ujIz4a4b7T3gzxNquNWdUXSXc/63VQSUyveHb2S
qoTEzdKi3SxG1Sg5pCLd+E3JJWReD1xGKhdYyVPvXjHgtUuiTl3VWyilH9de
V0kLz/cyMhw0SFvV27pr72FiD6Xju8VcliZQTF/VYyfmxjIKItNT3uXQG8zX
I/r58PML7PYJ4h1E+/BMGCYQXfHpq3tqsdfFBUo4quoEHRG9mI/I4FjOF7Gu
/smEEOt2ZDye71qrHE2chMbzLldOcF1MWNUDS8ZHj4ufZfq+zfExZSfpu98d
Z+f7yteV3t9LHH/lOtXdfhWJJ3VA2X3zlJnkiA6PCQqVUSSe4nmKZOw/aNO0
X7XIj4rsRuKWdPvZvdqp6nTtrl5tzelqZL70Ug/yI6iYM69tlbzMb82Zuaof
3IN3mcuBAB0kbjI4wkCNXtW/93J3JdrcR991m2FwiwhE9Nn2cZT3goPkqCL1
VyGhbEQnzbuoQ1MDSLoA+i1WgYqI7qASExL4OklCGf0DExX8IWNV59F+5X1L
W13kofeYS8pJXmRexOPpn5kvM7PU0t+xjPBuCPzdca4VtX4gyyCbPH6LC/VQ
iQf53YOHAjsdq/NTnZTEfee545Hz4WjBwLl4+4H0eFd2Vcx8AxLPE6qZaoMF
EZlyOp7JouYBSDyfmRqSBmURZY2S6eVL8RNkreqq+/33Vc5NZ8lpndZykcHD
rOqf+DkYeQ7dxSRUTRTuGXXHZC8sLv1hAVqT83n8AraoxKC2s84HEzA031Z0
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
5hE=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-10, 10}, {-10, 20}, {-1, 5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.679152485353118*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.679152462167891*^9, 3.679152462174939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6781955326564817`*^9, 3.6781955776163807`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.678195911806355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.678195922528976*^9, 3.6781959389534616`*^9}}],

Cell[BoxData[
 RowBox[{"4.166666666666667`", " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.916290731874155`"}], " ", 
         SuperscriptBox["\[ExponentialE]", "x"]}], "-", 
        RowBox[{"0.5108256237659907`", " ", 
         SuperscriptBox["\[ExponentialE]", "y"]}], "-", 
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}]], 
      RowBox[{"Beta", "[", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], ",", 
        SuperscriptBox["\[ExponentialE]", "y"]}], "]"}]], 
     RowBox[{"\[DifferentialD]", "y"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.678195949384815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{3.678195989834332*^9}],

Cell[BoxData["1.948189891555713`"], "Output",
 CellChangeTimes->{3.678195991047276*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"a", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"b", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678195998543441*^9, 3.678196017790621*^9}, {
  3.678196071261671*^9, 3.678196087387723*^9}}],

Cell[BoxData["2.4617269467424405`"], "Output",
 CellChangeTimes->{3.6781960187491007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"2.4617269467424405`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"2.46172694674244\"\>",
   2.4617269467424405`,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.6781960462911463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6781961002268553`*^9, 3.67819612635774*^9}, {
  3.678196159587859*^9, 3.678196199799457*^9}, {3.678196324477507*^9, 
  3.678196327207313*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678196202163772*^9, 3.678196329077716*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"106.38892891395112`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.026409465105964064`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", \
ButtonNote -> \\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678196202163772*^9, 3.678196356408621*^9}],

Cell[BoxData["106.38892891395112`"], "Output",
 CellChangeTimes->{3.6781962247412167`*^9, 3.678196356460528*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "Pi"}], ")"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.04", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.96", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"a", "^", "2"}], ")"}]}], "/", "2"}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"b", "^", "2"}], ")"}]}], "/", "2"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678196848010268*^9, 3.6781968549855957`*^9}, {
  3.67819697329788*^9, 3.678196980058413*^9}, {3.678197023468017*^9, 
  3.678197024872861*^9}}],

Cell[BoxData["1.4065449020397116`"], "Output",
 CellChangeTimes->{3.678196859228202*^9, 3.6781969880449343`*^9, 
  3.6781970262881823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", "1.4065449020397116`", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "0", ",", "6", ",", "5", ",", "4", ",", "4", ",", "9",
      ",", "0", ",", "2", ",", "0", ",", "3", ",", "9", ",", "7", ",", "1", 
     ",", "1"}], "}"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.678197573547804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", "3"}]}], "Input",
 CellChangeTimes->{{3.678197626668646*^9, 3.678197684148363*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.678197666896164*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.678197666897977*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"b", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", "7"}]}], "Input",
 CellChangeTimes->{{3.678197696178245*^9, 3.678197704938615*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Beta", "[", 
        RowBox[{
         RowBox[{"Exp", "[", "a", "]"}], ",", 
         RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Beta", "[", 
        RowBox[{
         RowBox[{"Exp", "[", "c", "]"}], ",", 
         RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
     RowBox[{"0.4", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
     RowBox[{"0.6", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
     RowBox[{"0.3", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
     RowBox[{"0.7", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
      "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
      "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", 
      RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"c", ",", " ", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}], " ", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "10"}], "}"}]}]}], " ", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.678197080507268*^9, 3.67819714084871*^9}, {
   3.6781971710816517`*^9, 3.678197210705431*^9}, {3.678197409961697*^9, 
   3.6781974761784573`*^9}, {3.678197561222011*^9, 3.6781976786743593`*^9}, {
   3.6781977371484737`*^9, 3.678197808535076*^9}, 3.6781978706581163`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlcDf37/3FKe9oQ0qaVSrSepc5IUXaJLImirIkKWbIlsqRkTUJUdpKE
ig6SrSgpS5YWUcmSfYl+98eZ13Xuc7737/5nHj3NfXrP80zvmXnNdb2NAkO9
gzq0a9dOX75dO84/W4djGqVtbdoibMeJ/nTOrbjJFXmqGyaaaBLnXhGpLH9R
zt15t2u1Z6Iq8QsFzr8+jiznnlDRXhVS1ZH414KSI/UqN7hX/35Oe+Lq51c/
m+Nyhnv67/5fC8DjHjfMtL2cwM3+y18Rv2C/y73KOJjb7u9/D/LBNaODPx9J
sOceEO8vBN/DSfGa8/a7c7r484nXd5Tzu9H9uPMl8XgY8EDuva9pZnbOR8Tj
Jx635l6Jl6e/U6L4eIkn7g48fejmVYfLYj/EN/f8XqytkNif/Zl4X0H9Fb6T
mRV+htfKxl7Z5wY+IM/YrknpZDynwxvyDH5x7spu36u+kGfwdtNMQmIvfiHP
4NdGbVi6QfMNeQZ/7ed+4/DLCvIMHvntqW/fHhfIM/idyaPHn8lIJM/g3VxK
Hd6XB3LhGTzD+uiCHFUjLjyDK4yPLz+ukU2ewX3G5ETMmttEnsEnl92PKxo2
yRGewZ9aD7+qdd/BDp7B/2iUPPwwvZI8w9/nz4FO/VdIPIP7jfn8amLBV/KM
reClxnilY+o8eAYP9+fGBAd048Ez+Orxelam47rz4Bl80gEDpzmXNHnwDF6Z
vfBZpHs7HjyD53lojC/5+pI8g0d88H37ev8V8gzeWVFbM2jHRvIMrmFyfqCS
em8uPNPxRXj/sdk21xmewcv+fKoduLOBPINfnPblbNXkUvIMrtyxfo/Lz2XW
8AxPNwbP1zmy7jZ5Bs9ZmTh/Q8x38gx+cvfU5Jj1PcgztrlVjWs//ehPnsFT
pk0NtgpmyDP4ZoWa2YbBbuQZPDCox1Lz7gLyDP75dmhPW0sbHjyDR1jnG8vp
d+bBM3jS1TkJReuayDO4nMWPmh8ZO8gz/V1+MnlbVFRHnsEV759JqfCd6wTP
4Pq2hQPq506xh2dw92Ueg1b4d7GBZ/jIbDbQ/jz7PHkGX25+6kGIwkfyDB7+
+6q1R5UheQa/l7Vz38aJA8kztgP1HrceqppEnsHrfe8u2q8wmzyDzxixKMRs
y3zyDD62kdfdd3cIeQZ3W+9UIhoQQJ7BDY+1DktSc+PBM/jmmh+dgzd9J8/g
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
ymXWN8jM/8WubwCO/cMydwosJ2rypdc9+Gc8YeJ1D8Cx/9DYk49tzT2obw77
17L1nODYv3fkSb0XpmEy6yRk5i9ME6+TAE59MNZBGmPGbpdZPyEz3/+weP0E
cOx/TDU74HxYmsy6Cpn5j96L11UAx/5LM1JW3cvbKLPeQma+pqF4vQVw7P9F
e12cVrw29a1j/84p4nUYwLH/c40nm25GVMqsz5CZfzZPvD4DOPZf/6hTWepH
DvW5Y/+IS1LrNtD+K43kd18RfaXzGc9z63+k6VbnqVNfHvha40vP+4Yl0fkJ
XhTlX98vdxGdb+D30ni7oi8/oPMK3LPwjcfNe+bU/w6eGxFokV20gM4f8FHy
3cfadsmi84H6lq7N2T6kppG+d3CV1/Vz2nrrUn8l+GHXQ4ftGHvqrwSf45ny
llE3o3UGwCcorr5WWJNL3xf47jULvjdkb6B1BsDfhShOvyl3jfxTrjZ3Z4u1
5tV+8IznY/XGZ9W3CxeRZ/DvOVqtugLJOl3g0yKZDkETm8kzeM6+Olcmayyt
MwC+e8WR/Z3Ks8kz+IoXGxv+fFai/nfKUbfM7NDScRytMwC+YFC722kee6iP
FXzLpsy38xY8IM/0PmdfiEXIxlbyDF7ieSltxcsf5Bl88DTPa0pee6iPFTzm
j8eM2e8jqI8VPCMgel5q8UXqc6Tj1e7a129WYX/p85nDLExTnJI7UI8vfT5z
mIKzCTOPxiTwpM9nDvNxVz/biMkpfOnzmcN0ODc0pjlPSyB9PnOYwojZgx2+
Rwmkz2cOM+/5ct0wgxcC6fOZwzSuTrlk0M7RRfp85jD6VcK9/KoYF+nzmcP0
++qiuNSn2EX6fOYwh1ZNGRka2c5V+nzmMM6n397fXqfoKn0+c5iBGzuYf1A+
5yJ9PnOYUq8pCxY0JQukz2cOc6TrZd6GjGau9PnMYdqeFP08V93BHp7pff7Q
p6OYsTfIM3jAw5ud3k+1pf538PZrPrlr2fpQ/zv4lpFhK7eFV5BncMd5Pdc4
bx9G/e/gPgV3+kSev0D97+Aey9rHqXXvSf3v4CEmR/yqtCOp/x38q2qV1c3f
t2idAfC5Z20sB/ZRonpf8B9u56bdPmFA9angy/b2XrB2eCWtMwDu/rlOXiPt
Jq0zAH671+sVFzqZUv87eFvTY9ORPQc7SM8baoyC1sUf/bdW8aXnDTXm1IyQ
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
q1puWereWbX9h6l7XtWEX6XWHtUzLs5yrvLdktS9uerMFal1A/Voa1Lrk+o3
v0ytZ6qeXJ5ac1D/+EWWF5S716bWMNXPbk2tSc6Bt6TWLWfD38H14ZnwN6m1
0+lww+C1oTWivac9WDBxr6m9MAJeBdfMuXb9NrX+OQPekLo+VP7anFo7naXa
JrUeOw3enlqTfAPelOUL5bJtqfXV17UvU2sX6o9WptY01DftSK2pvhlcd+tb
vKp1G1wnn8m36BK8T8+Grw3uO6SRzIzWsFSrdw3WFs6Jrn+1JucyT4/gnqUO
4x2C+xT1Md1Vf8DnMn5jcJ9ynmJCcO9zvvZ6cO9TO7qP25xzTfdOap1E/YX6
E/Up6imKBetXyh27U+uu8xg7JstNb+N/ZbwZ/BZcALsFfkd7KLWWoh7kr9T6
7Vz4z9R5U/n3ANYJXsh4GqznLMLvT60/L4D3pdal58NJlsuUc4vlXStrv5QN
1tPe1RqO7g1Uh7wdXTOpZuud7Rft2TuDNcmf8Hfpd+Cf8Y9H99ofKaZG9+BL
NXdwT/qLclEWz7V/50RrcJsZmxgdy77Qt42OR18p7kbriZ/CjYL1vc/1nqP7
VdW0V2VrQPG8VbC+9zX+hSxWfqlvG60PanxKtD74DXx/tL6v9/9SdExcozmi
Nc118ODgmlyxYnK0jrmesUuCtUfNPyRaZ9f7vyjLL9pfjYP1WD1LE+zZnOd/
JFrjej9YH1ccm8HPL2d91AbGmwVrs7qHNsFa5bf4ttgr8Hf41sGanp7l9OA4
r/c/KVp7XQu3CNZ1NeeDwZrDNnzzYH1YzzI4+ixBa+aj6LpTtWWt4Pyi71g9
ixuqPe6M1j0VT3pHa6Pa+9OitePv4T7RGqXiz93R5zGKS9OjdecftLeiNWs9
S9/osxzFk7uitU7FnP7R5zqKG/dGn/0otsyO1jQ3wRcE68wr8XWD4/kKxZDo
sx/FxqnRerHe4YxoffxHuF6wdq01dl/0OZPiz4PRZzzaXxOi86jW3vjovPgZ
XD9Y016FPzM4Ly/DVwvOm0vwVYJz5WL8ycE59AOtkWgtTtefHZx/P8afGpyj
P8SPjc67mv/ZaH1cz3hucO7+ROsrWhPX846J1vo0XhsbzjXLtW+i9UbNPzT6
vErx5+loLU7XNAjWafVc70f3tOpfKgbr+VqrFwb3+Kv1fNFnZootFwfr7dq/
o6N1Nt1/gbzPgZTfj8n7jEf1TJL3eZJirERvnSEp9qpf1j6owFia9/mT4u3+
aL1YddqR6HMmxfaj8z5PUt11VN7nRsrd6qPVz6mXfydaY1KvelvwuclWrZdo
HVjf5Z9oLUb13q3B5y9b8Muj9RT1RB9Hay7qv2LeZ2DKIyHvcyzliIJ5n3Wp
hjkQrXmpbjwYraMpfy2N1lbUo5XOu0dVrXts3jWc6pzF0bqPesZSefelqmmL
5q0vqKYqmXefrFp0SbQ2pF6ySN79sGqwUdEauNbhu9F6nzSBE/PWDlRz/h19
lqaa83C0Rq/c+m+03qf6p3ze+otq10J56zuqzcrk3W+rxi6cd+2oGrVc3v28
6u2yeffwqodHRmvsWv+zos9jNgbrG1tz1iM6B58xaW+OiNb/pYMtitb+pBUs
iD4bUxwbF12Pak1+EK1zqQfvFnxmpPhwTfAZmWJOx+AaQHlfGqzWidaLcrly
unSkZdE6l3rq16PPqLQeRgTrBupHOgWfWynW3YC9lXMuuz74XEzPNTD6LFl5
f1702Z7y4NzoMy3lzQHR59DK78Oiz49VAwyPPu9QXn4r+rxNOfe64PpZNU/T
4HM6xfk3os8CtbavCK5tVNP+HyMu6Uw=
          "]], Polygon3DBox[CompressedData["
1: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
YpalZ9O7yWFmXXq2O/r3azan57uxH39/n57sql4P+P4dj6t7Pe/7v6FGD5nZ
WK9vrNFr/kZ/qx7uyl5fmF19xOfnpD+A4x5cH5dze3p/G/+8P21557JrRE6R
o5tkRLv37/+mfn75vuXoi/v67XyVky/q9YpcLf/d2Y+HfK/nusZa08SL6WkH
9/NJflyH6yOAxwHf0T/jAiXP4LMf3sWv7wweTW4Hr6tXkCpqMqMze31k9mdm
dFavjzbq9dbZvR6Se+X4C3s9JvebKZ3U62P1mXrt5F6/yO16eLMsMxG9vZnA
ib0+NCu4uUZPW+Ot9ZKd2ZsZgLXKGmJWZ6ZgbdlczgNPBX7Ud1ujDcyg1Ivn
0I6gfwLnFuLaiTVeRk8j35xW866G7fn69BqvMKDns1Nr/E7X8/HJNf6q6fn6
pBo/9ncT/jylxo+1PT9fUaMHzZj0R47J8E0yYsdqlS61zRo3Eb9thS556SN6
FvCKXfLYR8HjD5M1PUnJmnatn1Gjz0bp+Xz5LmvbNT4O998MvqXEM23ru+2S
D99fki9eVTOfzbD0z85Z58oEbebybTVz2cxOv3BtjT8xM1SvXwdeoEnGqR95
uc1Y/AXe0bla42/M5PQn5uPm4tYMa8fVNfreDE+9fwt4+SaZoP5HDzmE/htN
vKWe76EST6gXlNNGLMn4Hus5cKYSDpQbb+31+bIl/ub2mnzAzFI/dkcNd5k5
6tcGq0macJrcdn2NPzITVj+3/fuYrs3aubNm7ehx1f8rd9kfeBw84TDJxO8p
ydjNyh1Dx9LM+piaTEk/qN7XH5mpma3pD80O9U/6ATWcWs6M0LzA/ED/aEZn
VmfNmaQmA9uqX99T12RCZkNy1Jw1mZvZmxp3yhp/aD5jTbG2qJmXLNHMamk1
+cI936vVn+35X478tdeoS5TURLWrmn0Z8CqukRpNvnSJR1CrmzEtVeIRzJ7U
g46NY6SXMrM0u1RzT16TaZptqskG1WRgZmFq5ulr9gzOKMnE3EvQYyxYUhP1
HmZkR5b4X7MzNfu/SjyJWv71kj0hNYhaxIzTvOugJn55XMbr4ZI1eVRNxmnW
qYaftiYf85x98y33PC4vyXjdCzGjNKvUI8xek/mZ/ek5Zq3J/Mz+9Agz12R+
Zn96iBlrMjeztwPB09R4LPcLFm3ivfQQ65V4Er2Fa27GkjXtWpRD5BI55Oga
TzZ3iabSq43bZm47x80CvuSeT+h/Svu6Rk+e0+bcV+ATfAdN9rC+qalB1qKP
aV/U+Gv9vfmBftoM2PxBv6/fvonrHzbZg/u8RiOtUZJBqp2ua+NvhvTf7xpy
LcmRx9X4oQf79S8fyHFynfpFfySHyqX6o+NrMvh7S/bAzOblPLlPjnSvZQLw
YyVr9tiajP++Eo40+9cDrFniMfUGarzVSjya2k9NuHqJ51Qr6vnM7vUEekE9
nXtFmzXxenpAs3s1ld5Qz7BiiQfWSzjGrltzdcdej7xQiQbUO5uRm5WrSSeq
8axm+3oSvawe1PzSPFZvasZv1q9GHa/G865Q4sH1wmq6lUo8tlpPTyM3ypF6
HT3vWiV+TS+sJ9a/bdzEK+up5yrR4N/0Gsg8eOsm2sj8c51eX6g3VurCfb5z
373j7Z7oe/14nVnjLwaW+IenarhPDjQbebrGf5qJmY09WcOdcqjZ2gs12ZQZ
ln71mZpsxczF7OX5mrnpHFU/D6nJqsy09LuP1PhdM2mz6YdruFGONMu2plvb
1QB6sWW6cLtzzLl2ZU3e4x6T+bdz6h3w5W0/12r8shmyWfLjNf7dDNksWY2h
1lBD6AUfrMlnzMTNxh+t8edm6GbpS3fxetYYa40aR65Yq432ebYmzzFjMmsa
ra9X8/Za0IxXf6gH0guZ8UxW4hfNfu6tycfNrM2uzXymKMnszILuqalF1iSz
7Ptq8lUzerP6u2vmgnPCPPyumrnpHDVrv78mbzXzNvt+qH9+M3+z/wdq8lcz
Y7Pjl8CnN8kczTvUbGo3NZre20x6opI9AbPq52q0nxmm+ZaZ+AQlmbVZuZn5
hCV7FmbpeuaXmnCe3PdPDVfKuXKvHPQu+Io23DRsl1ppTbO2jdiltrjGXGvD
dKmN1lRr60hd1p5r3rU/Whfuk2PkmtG7cI1rzrU3oAs3uEZdq531q0nNtfaO
xfHLJhx8Nc80XJfaas219qp5lu3r8fc93y/T12Prx7f8noFN9gD0n7/W+GUz
Cv30GF3WvmvetT9yF66QI+SK4bt8l99p7TcjmbIkozY7GdiFG+V4uX7ULtwp
Z8qdo1i/mnCq3Pon/39B8Jwl/vqvmnxDjpFrSpfaLifKjW0XblSjqFX+ruEi
a5y1To2uVlejm7VYA9+if2lfG9Vgb4Mva6PNzDQmL8nUzTqsKWZvF7apNbWL
FlIDqYWe4vhVk/ronFFP+C4H9vVNT6A30HOYteg59B7ut6g3/qjJM8xI9Ptq
jDfBl7TRHr/XaFkzGf2/HClXXtmm1rkHNH7JHoZ7Q09w/YgmewDuBbwFvqzJ
Hph7YR/XeEk9pVnERTVrXQ6QC/Q8eh/1tPpcT6G30BOZHX1U4yXMSMxKLq/J
csx03D95sWYvwD0A88Dzataaz+iz6tH0W9+UeLfXuH5+k0zbvNkxd+wdc7OW
68CXga8Dr8+9F9eMjRwlV51Vk0ePXpJPfQJ+qEmGYZah5/Gzh7bxQu/X7C25
p2c++AH4liZ7TuZ/+mv3Ns38VqX/Xk1WYGZgvuj/8H9Zo8zGzq/hDjlFbtHf
6Ef04Pq7c2vGxj0499ts9gc12U9zT2/Mkt/gXp81z9qnpzNLu7DGT8lpctuH
NdmBGYJZ16s1eah7Fu5dXFqz9uRoufoy2ukl73iFmv0898cmbZI9vVOThw7d
Q+DeC2q4U06UG9+oyVPdA3Ev5JIa7neNuFaW7aKt1Exqp7Nr3p2/yd+2Qs+/
W7R5lvX78d6tH9t3+/EZumfh84JnbMIhcsnLNdmBGYL59ds1WcnQPR3wKzX5
sXsk5tGv12QTZhTu7bxZk++6Z+Pezf8BPFO3Qw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt12fYFNUVAOBldwGpIggoKBaKSg2gIF2pkSo9oSZUQzVUI02liAKiAkKU
YlRKVDQJClgokao0oxQbkKCACoKiKEjLe57hx3nuPe+c2W935s65893Ua2i7
IelUKvW+yCkqZlKpCqJ0NpVq4cCTxrXyhuZHza83LyWKmNdk/XOkUkOddyW7
mtVmA9ifxBT5Kn4ju1t+j7oz5pVZJVHG8Zbyp4y75J3MR6t7SF19+U7RkY1i
E1g9+SeiL5vCZrJW8nKirLjJ5zRzbIaxqKhjPlDdMHWFHS/O6rHBbAS7mhVj
ddkgNpwVYdeJkhGO3e3Yo8YS4i7z+9WNVlfc8fysMuvB+sb1Y78RVeL7ONbK
saeNBUU1817qBqjL5/hb4mbWiLVgv5oXUFfF2JP1Y7nUXMsasKFsFCvG8rAK
rCvrIibK84qKrJu8t7qMusKsBuvHhrCC7BpWnw1hI1lRtjquHWvImrOz5lep
u8PYlw1mBdQUYrezPmwQy8/Ki9vitzjW3LGZxnyiknl3dX3UZR2/klVnvdlA
lpetySTX94hj15qXEJXNY0EuVLdEXSf2vmjDfozvZF5DbMok6/NkNllLsaYy
5jewNs7t5Nyf4xz+i/wWUYXtZKfYz/JyojLbxbLOLW1sz7qy8+abM8n6/D6b
3NO4txszye88kU2ek3heNmSSdXec3WJ+q9iSSe7/D6yqeTVxLq4Da+BvNPU3
jphXdXyk8Rk2V1yIa6yuurglm/zu2cZbxb3mD6mZ6tw7HU+zUqw168hOm5+P
59DYmLVk35lfjHVubMpasxPmx+K3mL/LXo3vLl9rLMheNr4i2mXj5nkezFvG
OhXj5eVFz7jX8Z2VNHNujugNrBXrwH4yv439zjiVPSqek69X25h9Y35TrBuR
y7ws66imu3MvmOdkZYwdWDd2zrwC+0P0JDaPNY2+xGaxN9ibomDO5FrHNS/n
WGvHZhnXyRuZfx1rJHqS2Cf6sMnOe8LntZR/LLqz8dG/WGP5HtGLTWTTWXP5
XtGbTWIzWAv5R6IbG8cms0by/4iubCybxBpG34v+Gt/Bd2nq2HTjB/K25sPU
jVFXK9YW759O1kWsj8XybbwdGy4fq662/EPRhY2JXsDulm8X7dkINo7Vke8Q
HdjIuI+sbvRhn3kfm8cWsdaxztn97Hm2jHVm/xZN2LfZ5LvHb6hlPoktjmdV
5HTtt2aSa34qm6zhWMs/iYvxrIlKsV9kk3U/Kp2cF+cvjx4pRrOl8tf83e7O
ey+TXKNj2aTHR6/fLXqwCbGu1DWJnuv4ULaILWUd2a+iIKvPmrDD5qfZpegF
ogbby6o79wHjMvY666HmgijKmrBW7Lj539gPscZEidgz00nPit51XTbZI6ca
/yt/0Pw5dS+q+2P0Of4kW8+2stHsLjaTrWNb2Cj2PzGGzWcvsV6Z5DnqzB5g
fxGn5Yf4WLYgrp+63vLvxQl5HpFXvKPuABsePUS+QF1X+UExgs1hC1k3eQO1
T7C1bDMbyeqzGWwN28SGxxply9gn7CCbweqx6emkl0RPGcGWiywrG/ecfRHP
LftMfi72J7GCvRy9w3gzL88+jWeUPWt8h21gD8v3i2HxLLP5rIv81ej5rAyr
yD5PJ9fgpPwGUSr2Zd9tNjtgnhG51a2KfssOyfPFtWJvs7MsfzpZo7FWN0Yv
FuPY8ugv6vqqqcumstVsHRvC7mQPs3+yt9h9rCZ7iP2DrWb92VdiInsp1jwb
GM+VurlsC9vJxmWSPb58Oum50Xt3X+7FJVldeT2xTT4n7mc8e+IKJatjP2XT
jK+yN9iwy72kXzrpw9GPz8iP8qfZCvm76h6MHhmfyTax7WwM+5e4ilVjtdk3
0W9ZEePtrC47Zn6YPR57B1vB/iz/UjzCXox9hg2IZyjWqvzG2JfZFsc/YwOj
F7LZrJ38czGIzWBzWHt5Dd9vAnudrWL9Lu8Bs9nGWC/h8R4qprCV8jXqBqn7
VAxg09gs1lZ+r7qlbB87wKazNmwJ28v2s2nsCzGYPRG9mHWQ11H3KFvF1rLB
l3vi5HSyF8WetCKbrKsC6eSexb0bnU164oXLazTW6jr2CkurKy2v4PM+M/8r
Oyy/ShRga9iz7Ii8SI5kv459exE7Ls+KYmxT9PRYb/IrRf7Y69kZlttYkzVg
B81/iT3YWIPVZ/vj2Yt9wNiW/Z5dIb8i3m9YZ9aTXTLPzcoZO7Ee7GLsG2q/
k+cSxdnm2CPY6fhu8ZvZjngGYm+QXy2uZ9tjnbAf5YXFdWxbOtmrY88ulU3e
HR7PJv+DxP8i12eTff0x48/ynOZ3xPPh3APp5P0i3jNuyCb71zTjfPk3ai7G
+754j78dfdbYnLdnafmb0dtZbdaInTJ/gZ2SFxIl2Qfp5P+eWunkXTzeyQ/G
e6oYz16Tr1TXx3krRQlWhzVmP5q3VPdCOlm3sX6vsYc2Z4vYLvk+dZOdt1Ac
k6dFUbbR8ZPsaFzjWENsPWvq3HnGrWwXG6+mMXuGbWY72NhM8ndfZB+zj6Jn
yZvFtWHbo9+oe0RdK/YS280+Z4+xWdGP5TniHrOVjrdWt9i4h33BHlezNPbg
uE6iDPvY8b+z83G/RTm2hz0dz5f8Uir5H/RN9lQ8/+xC0vZSb0RvZYWMVXkt
9nX0AZbXWIHdzr6MPZF9K0/F2jJsiD7qQ543fsg+YVPUvCuqsnasC8sjnxs9
K5612BvYO9G/WT5jRXYH+8r8tz5vgXEH28MmqlkizspLiNLso7j/0cuN5Vl1
dijeM9i5WN+iLNsdPZgVjncRVod9a36Pv7HQuJPtZZPi3UUUZ81YG3bS/P9Y
itd+
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEYwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/Mrw/f9PPX+Ouc5nVPW3tvUExdF0bBeFeZHXWo2PopyucBSrrOC
p6zlAxv5zTZmJERRN4tYrEFzNUdZzwm2cIqdnGc/l8K1eM13betZ91q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc057jht+6EIvYS+N
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT/do4B1reMzy8Fws4a1zV3xT
jp7CWRXYMZv5zGIeM8MZZjCL6eEdMI2pTFGqOSnMTGByeMdM4q8S9RP+05es
Ec34uf3/Hv4AxpdK8A==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
       914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
       697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
       1118, 922, 702, 1106, 1119, 923, 1002}], 
      Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
       707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 1211, 
       711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 931, 715, 
       1129, 932, 716, 1130, 933, 717}], 
      Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934, 
       722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 1215, 
       726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730, 1138, 
       940, 731, 1139, 941, 732}], 
      Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 520, 
       737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017, 1220, 
       741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 946, 745, 
       1146, 947, 746, 1147, 948, 747}], 
      Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 1023,
        1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 1024, 1227,
        756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 1151, 951, 
       760, 1152, 952, 761, 1153, 953, 762}], 
      Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 1031,
        1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 1033, 
       1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 1037, 
       1240, 775, 1156, 955, 776, 1157, 956, 777}], 
      Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 1041,
        1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 1044, 
       1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 1048, 
       1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
      Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
       960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
       810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
       1171, 968, 820, 1172, 969, 822}], 
      Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 1264,
        1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 1260, 
       1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 1256, 
       1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
      Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175, 
       972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 1065, 
       1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978, 835, 
       1183, 979, 836, 1184, 980, 837}], 
      Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981, 
       842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 1272, 
       846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850, 1192, 
       987, 851, 1193, 988, 852}], 
      Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 625, 
       857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073, 1277, 
       861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 865, 1199, 
       993, 866, 1200, 994, 867}], 
      Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 1079,
        1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 1203, 
       1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 879, 
       649, 880, 1204, 997, 881, 1205, 998, 882}], 
      Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 1088,
        1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 1090, 
       1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 1094, 
       1298, 895, 665, 896, 1208, 1000, 897}], 
      Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 1307, 
       1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 904, 
       673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 1300, 
       1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
       310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160, 
       370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430, 
       1290, 653, 445, 1299, 668, 460}], 
      Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
       311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161, 
       371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291, 
       654, 446, 1300, 669, 461}], 
      Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
       312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162, 
       372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292, 
       655, 447, 1301, 670, 462}], 
      Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
       1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163, 
       373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433, 
       1293, 656, 448, 1302, 671, 463}], 
      Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
       1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164, 
       374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434, 
       657, 449, 1303, 672, 464}], 
      Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
       1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165, 
       375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435, 
       658, 1206, 450, 673, 465}], 
      Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
       1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166, 
       376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436, 
       659, 1207, 451, 674, 1209, 466}], 
      Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
       526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
       1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
       1295, 661, 453, 1305, 676, 468}], 
      Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
       319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168, 
       379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296, 
       662, 454, 1306, 677, 469}], 
      Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
       1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588, 
       1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440, 
       1297, 663, 455, 1307, 678, 470}], 
      Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
       1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589, 
       1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441, 
       1298, 664, 456, 1308, 679, 471}], 
      Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
       1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590, 
       1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 1204, 
       442, 665, 457, 1309, 680, 472}], 
      Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
       531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267, 
       591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651, 
       1205, 443, 666, 1208, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
       622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354, 
       562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502, 
       1213, 279, 487, 1210, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
       1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247, 
       347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287, 
       495, 1211, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
T09dVu1XPT128LsgOf5119NiEFPBsSwstDML2nm+d8TsaK4oNsVmZpMoFV4H
uVk0m6kx3MIG9Rm7eLyH10F1HSzR/o5obJ9QRq2CGLwO8lewIDxO3q4gm2U4
SbMKr19YdrSiVik/y3veNTN4/5/v1xjtB7oqXeuQxT4qvpXn4HyqI7WzBJkh
dHJ6h1f4Zt8sgP77WjdI6/1YR0QTVdzpYYbXEXLrVbJhP9YR50eWkPz/WUco
uYseOPVjHfFoMfQiw3/WEUNSZhIec3MKsWLysdHnZ0E/WRMZzt73xcrTqKpZ
ZKFKQD85ftVzo0cw/KrntgZ+p6dWCW/m/JhXnzitdsfzP/Nqg6ss4sE/5tWz
vZTos/+ZV0tcPpFfN/VVwa2zoMpaahLOF2IdZzx3SB+ZSEwqNHMfzt8uyqSO
CnjVXpXVb26l3D6sxEy79asdhyu4veHWePktQwNaEUov0E+uWXeDLatRdLRm
/gn3JbgeUVQRGyR/SuXkieCvZDyTJGDfalUVpXi90BxTbl3OUrtqC+YtM86/
938J/tn/9buqeDbtmTkm9Hwo0/IsfDxO5mc9InpEya96RNug3s4K72jJdNMe
+tVRp4aeyCHQn6FM1/zipXYEdcl7oU85cP1tqv3vAuz/+S6glpN//hYHCZRs
pF9AyQX722niq/N6349BTWMOffOkxCBu6p1HLLFYVuSdVxl00pRw3ULbQ6bK
3QZ7CP5PcRHUxykAH/98yiR2lABaLD+ZQ+Q8BNofcYvwMXskCLmYEh7RkYP3
nW+YXb70wUMN2rG6G9E9Cu+XhbSvfCiyNUK6xF97KfvKE/B4O8/srTYt5EPa
DtEVMjPAV/gMDEU/sSB1kEKCsZOsgHdtnSjms11Cd7Myq7FlwvWFdKXRHOk3
BKA4voef+G4tAJ6oSlPOnqQPRVgbvpGSg+ulGDNq39I76Qo1jVTXRnnbAP44
dfTx3Rl/ZLjjYNJsD7w/kifZmBl7LRY5ozeRUEUF108oudviI3LOFclrKXyK
8zTsUS/GbV6i1jiK7JXmnCEVYAJ8odXjoozYKDrmkYZJMgauu/7qEN6voo4L
ekuOo/fOHQScYUrIVFfLGKIJPmvZdVwEtONYm7TKdSsAYgs8xFFWB++73bG4
T+2OyoRyDx0q5voOv8fd0ZPJ/u+KIL35sViqZwvwe3wECuPha0KOG70jiNqc
hX378g2WBdsqZJhV5LvX1nAe9dENywkKc28kha7/QLj0TXi/1T7cwA3zDZGW
nPTSuhvOW/hqYXty17MJLXMxLbSFJQhclxzHxZMUuazQveP2wWcuwPWdDk3G
2YyRWkJTpNlPhs3h70QaWsgfnKlMgLTZ13bpleG8eupPDPoNx6qhcd0oQ9rG
t4BTBXZph7NOQu4UJAPbprB/HkygZ7bloMDgCeYjCl1F4bqRHUcibxsQyEfz
hzsOR8P7BQv6ZlVpU5TyxTLkFhqPjgKuN/wMNTndhTxLTyrr7tsD2newW0J9
djNH2vkSU/flaML71wYV7kZ9LIiZ9IsGi4Eb4Dkptp9vnPRPvnHo9m//7yD4
t/83e/R7H8FX4MBf+winmH77/1saf/v/s2K/PX/up789v5/+b5/vzvi3z/80
8dvbB83+7e2rHH77+Reif/t5l/36w3Zn/vbqnUO//fnAl7/9+bP9+sPe/9Qf
7t2vP9z3T/1hnv36w0P/1B/22q8/7PRP/WG92oOFtFQISGl0hx1qhJ9vzpfD
zN2WhLGuUmNDjhGw7xUYEJIpYs6B4sUoem84wn7V2L+otGGUCVOaiC7n8IM9
atx4Td/XpgWsAwLhWmcH+8xldb+75pwkuI/8NnNjD2CfuaRKITfRoY1xbJnt
croBz5eUr2dMdzo1Yj7U3O8UjoP9YaLeBKFjLwor+9jqRq837A+v02w0BzDP
4pJL8hyZ/+P3eNrMNX3o6KosDIOzX//H79X6vEPas9ErJWEOxvzX79mXhWf4
j37H1NweyPbtgv1bqmOJqUhuEDbS2Tmk7Rrs2ZDNcoo3+IhxlLuRWvfewJ6t
2+Ul+0TCLVzt3qnQey6wZ/Pez5Ns+SdPUoLDT5TMf66qprFJksSBBC/R+9ub
vWvLovXV4cbfIvCc1u8/jV/mtvrlzZaP8c2nErOiDl6szbv6xQJ/tUjhlzdT
8zvQujdBjvK+rPlA0OIIfr0t9Zc3u97+YjIicgITWT02d9wbzouzeV0kuOnt
g9Wgvdhv9DAYvK/Jwzp2VX1IcUr2XCHiXHTAt5AntDNuEofigps5zx0+GA/4
x4BNVYPsXZxxuwDXvTEK4GEipvOxZ5uF8DW7brpfOxCo1zvIhp/9UReyvdGy
64Iv4f9yNVw5EMVGo2GQ8IOvnINIr24IoMZVysWsVjNQhs1LYaubCygvlqsk
03T2qDVHq8BnIfr4JBKEz898zudU0iXGX5lRhe3Ehw6Y8eFr1DzWftU1Nfy/
2s48GsrvAeNkJ/uanbKUJULMkNcuZamQbYSKCqFEEd/IFkpURCVMka1CiHfM
TJZQWiiMZA3JnuwKv2rmvNc453vO95/fv895z8y997wzc+dzn+d5ydzJS3cT
FXdK4gz7y50WuX9QcSfvY2TuNBHFRcWdahSv/uVOuUVmVNzpsB2WzJ1KY6i4
04gemS81GKhT8SWm/CjRP3zJGpJN/sOXJDLJfCk9SiR2bSSOaHfhgPyWlUzo
kqw4Y+Pv+X7tzhO7dM4RssdcH3pi9AK6mCe1OwE/BaUIz9bw112G5HR36Yhi
wyH9gJN/+ZK3Hpkv5WaXUPGluxSf3soGn16wnuxas353ZZNwJEF5DuRqUb9K
XhxKa0RF87iNFFxkRD7vDk4iW+ljBlCTKrivUDzoE/sik5f9gXYQFXcareaj
swr8byW4rvqbHah2tRPhySmTgBvs7E+N9a1FieShBR5+BHk9eYovbn6DL64r
w72Mu8IOlbsfG/ir/RiiJ8fet3Cll0Utd0+IdJcqIbpUzJv2LMdmrW0c2zyq
Nd8gvyO2CbejhPAiWlyJg6G0omyIPvKdjo/lR9Zu1xf0qlyMEcj3ZDxl3UY3
rJsPn6jTt3Ia+GxO3DLjJ5CTpdGS0rRK6EC1qtj/mLCQR3RZ3ZvR8UO06C+x
VqX73wH9YuoMhs2SAV30pmfSQxX44gJmD51W81tFrQgr825RA71AmhSfW8IG
n9uoqL7td+8wVM5Rd13oSjSyDpsb3ysuSqNRh/bnsLh5g15BBZyjLktyslZd
/eikryngNkLJpya7bbZrMiRVEKdOsyD/m8oCrUy54mTU7VJVchyW5pF12BkZ
mZb2VgYeU5gXrsYBP1gFStI8pma+MvXOM24S1gLRO1V7WZUIYmgrhmWxpSuA
M7w+GuNqNSCH3iFW3zipAq5/Q/GbOW/wm5HWcgumLG6hnhuP5ZcHJAF/Ba0p
sUiWDnXNtHiHmPM0Mq9Q9/cTC0HZmj40wj6nzkci84pgDRy2OVqk/u1hsR8x
DHCe5QxWP/srB+EDgRUu52S9kfd1x4pInrTUhyeaLQV07UBOsPSjjuDmNHk0
45WSe36tgFN9p/i4lDf4uGiryJxK5TA1pwrUoY0we+KGUsm1bHF3tUL0ksJK
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 272.6631355281268},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-5, 5}, {-5, 5}, {-1, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.8263490146357614, -2.9353575387027004`, 1.466568588914861},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.678197142997488*^9, {3.678197176169092*^9, 3.678197211392948*^9}, {
   3.678197411058105*^9, 3.678197476802928*^9}, {3.678197562601774*^9, 
   3.678197611729821*^9}, {3.678197659542657*^9, 3.678197707770382*^9}, {
   3.678197744984254*^9, 3.678197816419989*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.678197142997488*^9, {3.678197176169092*^9, 3.678197211392948*^9}, {
   3.678197411058105*^9, 3.678197476802928*^9}, {3.678197562601774*^9, 
   3.678197611729821*^9}, {3.678197659542657*^9, 3.678197707770382*^9}, {
   3.678197744984254*^9, 3.6781978164231167`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.678197142997488*^9, {3.678197176169092*^9, 3.678197211392948*^9}, {
   3.678197411058105*^9, 3.678197476802928*^9}, {3.678197562601774*^9, 
   3.678197611729821*^9}, {3.678197659542657*^9, 3.678197707770382*^9}, {
   3.678197744984254*^9, 3.678197816423911*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", "5"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], " ", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", " ", "40"}], "}"}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.67819788023248*^9, 3.678198018184267*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.678197887931818*^9, 3.678198019774934*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.678197887931818*^9, 3.678198019776729*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Z7yG2WFnvH9wW/sBh5vqpzvj33gM+lgx42bzI63gWbh+qzyzHJ5r4JxwvdfQ
gGeWwzPL4ZnldF7OcHhmOTyzHJ5ZDs8sh2eWwzPL4YXl+DfL4Znl8FwD54S/
nyrPLIdnlsMzy+GZ5fDMcnhmOTyzHJ5ZDs8sh2eWwzPL4Yvl+DfL4bkGzgnP
R1SeWc7kdWqeWc7kdWqeWc7kdWqeWc7kdWqeWc7kdWqeWc7kdWqeWc7kdcRn
xDb+6pPQksPjSNPDq4d1cZLAP3g736fWSzKaSfh/y8DZ52c58/xsPWqceX41
XlP9eD5P63Zjelark80nmePV/LCve19fL8La14rDY9viRXdWFlpK+H/LwGs4
nn0eGctRH/5/9cwSKkTTm9Lzs/XjuJrqr+F1yY+WVmDMr2lNJczx7OdYY/3s
675d1yi/co4q130yyubQxmcBEv9K45OVlWb0ujvch76e+KIOcRyftbhet/A+
gyTn8gxzKyuN6fjkzR8565aFYnAc39HxbtMbu3rx9YvoeMcGKaLPX1eLwXH8
nEGNbzzq2loSoHhdXTreW+N8+cAVBmJwHB8/tZdx3tcCsVhxXG06PvOEzvCi
h5Gu4Dj+fMTBY5eHDBFLFLyC8vzJG/aUPjmT6AKO43u2sOknap3F588c5fwy
Pud3Vh5POb92jmHgmJAVzjgezzOYz6txPHjU5J09xwwocnFR1knfHy7Govey
Vx+cwHH8zmPTE5alz3TxU3qg4wOWjWnp12eLEziOfzjp5cZTdv7884voeHvF
/YXNDuA4/rAiD5/ldFb5OdLxiyf07rsoeKslOI5/9bRi3N9PDlopX9dM7fsP
zubh/PdQ7XjwGo6nHDuv1jrDUqdg+n6Cm4TpTWxotJq+n+Cz78vqfkpKpu8h
uNku43r16q+l7xt4yJAUj31B4yX4/oBP2TPsWe/BLSX4noDf6bXw6oPiw2J8
7uCX+Pwcnzv44sCkT7WM64vx+dL7OpvfLfr7c1d8juCt16eEBXe67YrPC9xL
kat3cMHnAj4ucleP8OSVNvDP5uTwXAOnHDvFrfWK08XO5BncPFb/zbUnG8gz
+Optk8xl0TfIM7h28rdH51OfkGfwed52EWUZD8gzuPyO+fNo51PkGbxln7Xy
TkZTJfBMOTyfn8MzeMieRVv2DzOQwDP4h4X+jZKLXSTwDO5wJ8hNXtdaAs/g
EkWufsQVnsHLmpgv/TlO1hqe2ZwcnmvglGM3iT6YWPGiUAzP4N3tbH1lUyeR
Z/DhFbenJ7/JJ8/ghyIrFr7bryuFZ/Cv275/uZZkKYVn8H9c6t8o6mYthWfw
5Rsdl01+1lgKz+BX+PwcnsHvuB/tsFKuIYVn8KQnXd+mWAVL4Rn8+9gOA+9U
+kjhGdxfkavXlcAzeND1oF6DK8/ZwjObk8NzDZxy7O4fZsys8Agjz+D/zPyZ
t9rQijyDl3Z7eafo70zyDN5bb+ftSy1NyDP46b7301tlBZJn8I9ND67ZsWEs
eQaXfou1KwiPJ8/g6/n8HJ7BKxNt7nXedIk8g/fx8FkfdqqPGzyD341xaP0u
s7MbPIPPUOTq7aXwDF7eQmfyoT6mbeGZzcnhuQZOOXaYa5zP99+nE/AMfrpX
0ti9bY/QeQK49N/pA+YkTyTPlGM1vDtkQnYd8gxe+rr52Z8Zo8gzeOHx1Elt
fu4jz5Rvz3aa9r9BT8kz+NrryvwcnsEdj/a4tCB6ghs8gz+Q5Xauc7SNOzyD
69Q+4Xv5iIk7PIPnKXJ1Fzd4Bk/KmFKLOx1gB89sTg7PNXDee4n88dubjy0+
mpFn8F/b8gZ/OOJFnsFPdlt5t1LDgTyDmwa3Lt9kXU7rM7huWMYZO4f55Blc
9tk25ue1cvIMHrptYMTdd/5u8Az+cJgyP4dn8PJBHx/tSDd2h2dwvQ9DX4Qs
0vSAZ/BFN92OhCwpJ8/gaYpc3d0dnsG92vSucLdcYA/P4KznGjjl2AWa4ZqT
T991gWfwWOdTnUInWZFncJnNskeL5nUhz+D5r8zeJjZzoe8z+JHU+juOnvlM
nsGbBky8GKK91g2eKYc//2Te9e0W7vAMfsHHUpGfwzP4p6XLc9ffNPaAZ3DH
3ZfOHq5w6AjP4NLP2iu+1bLsCM/gIkWunuQBz+Cmvj+eDC4zaA/PbE4OzzVw
yrE1uzvtf7hyGH2fwTs/27BhyLsn5Bm8S0Wg+8sSeyk8gx/Z83iv5e5ebvAM
Hrji0o3Ctt7u8Axe/mhqSYuG9T3gGVxSdDdtz6vzHvBM94d1sxX5OTyDb3Ft
PvuXz9uO8Ax+p7hs8JpSZy94Bo+P1qlzZaK1FzyDj1Tk6lc94Rl8f+j5hZar
JzvAM5uTw3MNnHJskyHPHwb2n0KeKZ/7ormmzXTV7yB4gx7/7lhvuJM8Ux6e
1zzgulc5eQavrJzz91hdAw94BpeLzzW7UdqgIzyDb5xSMS9i4KeO8Aw+3zZO
kZ/DM7h3jEnnbC9/L3gGP1w7ZM6/5857wzP4qoVPLMuKT3jDM/gxRa6+1Bue
wTNLQvueLwl3gmc2J4fnGjjl2Kev2+wyu1DUGp7B+6bqT850yWkDz+AzLV5E
HC4aYwfP4GZn50TqJb60h2fwB23C027lurWHZ/CKAdtN6rUd3gGewQ1Sl9yq
7xTnAM/gS9/U8a3Kz+GZ8sIHB/p5Pq5N16HgopKl++PtUp3hGdzq1IWW4+LT
neEZ3FiRq29zhmfwyPLDwbUjdreCZzYnh+cauFqODc9qeTjv+c/5sEiNwzPL
4Znl8Pzn/JxTy8/hmeXwzHJ4/vPxIjUOz39+HjM1Ds81cLUcG57V8nDe85/z
YZEah2eWwzPL4fnP+Tmnlp/DM8vhmeXw/OfjRWocnv/8PGZqHJ5r4Go5IZPL
qXn+c64oUuNMnqbmmeVMPqbmmeVMDqbmmeVMfqXmmeVMHqXmuaacE48L07YH
axb7UY7RvKjR8phHlpzLTlO/qV/60+9dz3aNOz8St+TuPYuZ39uvHZ2/IYf2
P5n6inPIoxwy9ULjQ8fftOTKnM/NH3DAj3LIAj6njfdZ3HxU+XZX+Kwbomea
kGLF3dU5Hms5t8gFPl34HOzhiPWCXBH118t3bmUctYZyQtQfu+Zi4Sm7YZQH
ov4H9y438O66ywk+UT9yP1qH+fqR78FnAZMzo44Pkca9rH3NOFGYvVOXoar8
DY/vhxZ8T366SpULbTCxfnTcnPP3zDIumrSOfNZ3MF19PMaCk4/cW/dj8zF0
3eEcofvLx6AFt8q3ydK+t0SUC4Uf1s04HtOCG37TZ6tr4/WU367+oTva+nIL
rt3jDbe6vatD+VsO7u/FxQhy13K+foeZC3/dqVfiCp/8++Ye3V8wP7hTEeVv
qL/uZo0ld2f1oxxVh6+fzUtd+PrZXBT1Mz5lqJ/1rJ0ieu2T0JT7fFm+sULH
hTyP6GgYZO1rzOX/0C4wck9S5UL8Y14T6+mVL6+TZ4uYJg6Pjptww26t63PL
4C55jqtrtPl4jCnn7P2tZ96t/eT54RYj7QTrZlzO9UWR48cMpvxNIm46OeZR
M27glI+nX3h8J8/rkB+mnhPknPX4+uVdy+2m22pT/hbB13/MNsBDXleVv6H+
Hdm6M+Zm5VPO2YKvn805Z/H1szkn6mc9o37Ws7ni70ifK22w2OJM/SLKhWYq
/l4MuMQ9Rk1O3VDlb8r7KiLuf4F6Y1/PL2Dua4i4wuXTZnXKb0jXdwmd9Ts+
Om7IGWmf9iuME9H13fuH+qnHY5pwTbRW2c9tW0Gee08yMEywNuJmFreNbJV2
lnLO/Xx+qDMpXJBzmvH1ZxwYnHc9uJI8z+DrH7w74OWtyiDK31D/X8eCXY02
taWcU8zXz+aca/n62ZwT9bOeUT/reaTic9fmHq68GPoiWJW/tVR8vvW5wu7f
xy4NU113PFJ8jg249MuJE7NMjjO5fUPuTLeUhss0TckzHiUalu0zHwWQ5waK
v9PG3M4Co7oNnw6jvGK44u9Rj7v61MowIXoI5UIcnx+W3gkW5JyRfP1DanUr
HTlclb+14OufmtPl9r+ZqvwN9c8LCrlxqWMg5Zwb+PrZnLMPXz+bczbk62c9
h/P1s56tFfV8y7kxdWO3h+1U+dtGxev+yOn8cfbuWn1U+Zvy+StzHNJP1O/+
QpW/KT1och8iZh5d4V2XPCv/Lmpxa+7fymvWbTR5xmNDy4YRxrf2kudyxfek
LtfydZT4+4U88pzG54eNY48Ick5Lvv6ysWMaTxmpyt8S+frDfbt5jziiyt9Q
f9GeuQfS3f0p5zzH18/mnLP4+tmcUyLIt1Se3/P1s55vKeq/mJOfGhvz3xdV
/iZX8PwcDaPoVzZZqvztgqKeohzbLUcvL6ivyt8OKY5/njNLRz71sJMqf0tS
vN/XOQOczZ8Gec9ncvvynNBNE+plrlflb3i0jLzWzNHUj/K3A3x+qLukgyDn
PMnXrznZ5P3RQ6r87TBfv/kFu5sB1fK3XL7+V2sPfA3Y3YXyt2N8/WzOuY2v
n805c/n6Wc9iQY6o8uzA12soufFoSrX8LUv5PN4XVoqGRFTL31YpX9f7mEOy
yYpq+dseZZ3e/tvu/T2/Wv4mV74v74lmE0pds9n8Ld/bK3/fYMOfCZS/bVB6
8+51+Lv/yBBV/obHi6smSqrnnHTf75T1yKnV8rczfP1uYWY/DlXL31bz9S+p
U3Jo3satHvC8g6+fzTkz+frZnHMTXz/reQdfP+v5jfJ7LktpdnBf9fzNia/3
QveNK6vnb7HKvyPZKfet50qr5W/K96Up2/D30sJm1fI3beXfqfekX82cNlbL
35TXmz+8S6Z/d2+vo8rfzJTrgLeRX84E++eq/C2Vzw9dnmlevLZSlXO+5eu3
M10z/1u1/A2PoutHjKrnb6i/z0ing2bdb3sKcyFNGZtz1uHrZ3PO1Xz9rGdz
vn7Wc5hy3ZalhfwQ5G9KP41lk3UXra6ev6He4x+2J1XP35TnXQ1ldW+ZP7lW
LX97oPzdkbmO/WUxqlr+pqynvuxWhF7pgmr523Dl75pMd+I32x0DVPnbPj4/
7N98VZj8hSrn5H93ZCXTIjbIq+Vv9fn6Q/aNn1o9f8Pj2w3z7xnEr/YW5hUN
1XLOAr5+Nuc04+tnPUfw9bOeeynPQ2QBij7hkc7w/E553iJbrOgTDnKlXEh5
niMb/crrt38RrRuo10jRJ7yZ1g3l9ZFItnvIHFH8yk9u8Myfd8nq/vc/81G6
Len7rLxe05el1R7UZsoYW/Kcw+eHS/g+YXjujfoV/BN9n/nzLtlJRf+wI32f
UX8Lhf9j5JnWaSbnzOfrZ3POWL5+1jN/nqnmWaw8r5ZFKfqEU2zgWfk9bCYr
VvQJ57aGZ/66Q+ai83JSpkt6G+Y6RXZL0SccaUf3r/l6H2h4Raz77509PPPX
EbK1Cxek3cz1bQ/P/HWHbNLTkLVcbnwHeObPn2W/4pV9wvDMXxfITip4nAM8
89cRMmNF//BzR3hG/b9OW+yLt0uinNOcr5/NOfHI5pyon/WM+lnP/HUicXjm
ryuJwzN/HU2cue4mTv0Yyutc4vAsvG+myoX462ji8LyuhpyTrR+e2frhma0f
nrWZ+uE3jakfdbP1wzNbP+UsynxGzTPbXwfP+5T5iZpnti8Rnnsp8xk1z8q/
L/WcU3h/UuU5p4ack60fntn64Zmtn8mL1Dz3ZOqH3+ZM/YxP7rZeb9vnmlYS
vB/kYOzn8l5wf1v1PK8ZDzie9cM8vxqvKSdEH9qggMxNcw6q5t/xvy/eq+eb
9CyA+mzBI2PL3hseUu0/AJ7W6GVrC4dgmjcBn26ZZRZa4EzzU+BdNCec+Zpd
SHPxdH8j6cTjgUtDaS4evE6Xc1dWtMqiuXjwgPMdhywbrktz8eADWlUurh+1
hubiwf/jct7mtw+nuXjwvJ3PDr2+soTm4sFDYob5PXqRQXPxb5nPC7k2y+ET
f0/f40utcvsNIp/gRidfLX9UWod8gidpTciubLKafIIX5r/7ePXOBvIJXp7R
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
HcHuC8VNaf4d3Mjy4IH00gzaZwD8/MHSj78yO9M+A7TvgcN807/S/WifATpP
5PcZoHk9/nvtU6uXp8mOIKqfzq+/zrN4sMiE6qffn/n/vJee20/1gw8rGnev
e5E+/X6BB2+dr7FxegS9L/C7DsGF8td9aa4f/Kdo/bNMS32a6wffN7/s3L0T
3Wmun+Ysmbl+cMz14/1SDhblecF+ZxbN24I7fPucu3/PAfrdAa9jsrHYw34s
vV/qg70yxXBMhia9X5oLv2g2x11/Kv1eg7cvbNR364hi8kDHT5w8wrPva/IA
brVnwLbzYQXkAXxq17s91vxqQ3P34OzcPTg7d///zcGE1yec/PYf9xfl5B//
uL8oJ7/wx/1FOfm7P+4vysk3jPnT/qKcfFZomz/sL8rJ0zaGK/YXFZ5P/D6+
+68/7CPKyRd4bPnDPqKcXNvQ/Q/7iHI17CPK1bCPKFfDPqJqnM5D1j5u9Wp5
48G0HxH1MZ5OUuRjOB71/nx4olxj9gTyD26Q5n45LKwFrW/ggzok/1WVjwn3
NdKVve5yxK0qHxPWI5ItlDTfYOkb7io8HxPJygxDzy//VF8iPB8TyeL/WzxZ
/iZOKqxfJLuyPPmo3iV3el3wuJ6fjZyC93sLz6N+/x3vPJVkkphB9cD3xKQz
vX765dF+ieDdurlPrpoXRj3g6yZNPdXKbwDtlwju4zp6n17iZdovUfV5ciOq
8jHUD754t4/PqqOfHVE/uJbu57SqOV/UD748ardM6+Eumv8Fx/yv8HNU/S4L
P8dq/V2CeX+2D0qkxoXngSou/D6ouPD7oOLCOX32eJEaF54Hqr8vtT4rYf6j
9r5YzuQ/xJn8R+39spzJedTe75+PF6lxJudhnkc9H8PnzvL/A0roTMI=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
q1puWereWbX9h6l7XtWEX6XWHtUzLs5yrvLdktS9uerMFal1A/Voa1Lrk+o3
v0ytZ6qeXJ5ac1D/+EWWF5S716bWMNXPbk2tSc6Bt6TWLWfD38H14ZnwN6m1
0+lww+C1oTWivac9WDBxr6m9MAJeBdfMuXb9NrX+OQPekLo+VP7anFo7naXa
JrUeOw3enlqTfAPelOUL5bJtqfXV17UvU2sX6o9WptY01DftSK2pvhlcd+tb
vKp1G1wnn8m36BK8T8+Grw3uO6SRzIzWsFSrdw3WFs6Jrn+1JucyT4/gnqUO
4x2C+xT1Md1Vf8DnMn5jcJ9ynmJCcO9zvvZ6cO9TO7qP25xzTfdOap1E/YX6
E/Up6imKBetXyh27U+uu8xg7JstNb+N/ZbwZ/BZcALsFfkd7KLWWoh7kr9T6
7Vz4z9R5U/n3ANYJXsh4GqznLMLvT60/L4D3pdal58NJlsuUc4vlXStrv5QN
1tPe1RqO7g1Uh7wdXTOpZuud7Rft2TuDNcmf8Hfpd+Cf8Y9H99ofKaZG9+BL
NXdwT/qLclEWz7V/50RrcJsZmxgdy77Qt42OR18p7kbriZ/CjYL1vc/1nqP7
VdW0V2VrQPG8VbC+9zX+hSxWfqlvG60PanxKtD74DXx/tL6v9/9SdExcozmi
Nc118ODgmlyxYnK0jrmesUuCtUfNPyRaZ9f7vyjLL9pfjYP1WD1LE+zZnOd/
JFrjej9YH1ccm8HPL2d91AbGmwVrs7qHNsFa5bf4ttgr8Hf41sGanp7l9OA4
r/c/KVp7XQu3CNZ1NeeDwZrDNnzzYH1YzzI4+ixBa+aj6LpTtWWt4Pyi71g9
ixuqPe6M1j0VT3pHa6Pa+9OitePv4T7RGqXiz93R5zGKS9OjdecftLeiNWs9
S9/osxzFk7uitU7FnP7R5zqKG/dGn/0otsyO1jQ3wRcE68wr8XWD4/kKxZDo
sx/FxqnRerHe4YxoffxHuF6wdq01dl/0OZPiz4PRZzzaXxOi86jW3vjovPgZ
XD9Y016FPzM4Ly/DVwvOm0vwVYJz5WL8ycE59AOtkWgtTtefHZx/P8afGpyj
P8SPjc67mv/ZaH1cz3hucO7+ROsrWhPX846J1vo0XhsbzjXLtW+i9UbNPzT6
vErx5+loLU7XNAjWafVc70f3tOpfKgbr+VqrFwb3+Kv1fNFnZootFwfr7dq/
o6N1Nt1/gbzPgZTfj8n7jEf1TJL3eZJirERvnSEp9qpf1j6owFia9/mT4u3+
aL1YddqR6HMmxfaj8z5PUt11VN7nRsrd6qPVz6mXfydaY1KvelvwuclWrZdo
HVjf5Z9oLUb13q3B5y9b8Muj9RT1RB9Hay7qv2LeZ2DKIyHvcyzliIJ5n3Wp
hjkQrXmpbjwYraMpfy2N1lbUo5XOu0dVrXts3jWc6pzF0bqPesZSefelqmmL
5q0vqKYqmXefrFp0SbQ2pF6ySN79sGqwUdEauNbhu9F6nzSBE/PWDlRz/h19
lqaa83C0Rq/c+m+03qf6p3ze+otq10J56zuqzcrk3W+rxi6cd+2oGrVc3v28
6u2yeffwqodHRmvsWv+zos9jNgbrG1tz1iM6B58xaW+OiNb/pYMtitb+pBUs
iD4bUxwbF12Pak1+EK1zqQfvFnxmpPhwTfAZmWJOx+AaQHlfGqzWidaLcrly
unSkZdE6l3rq16PPqLQeRgTrBupHOgWfWynW3YC9lXMuuz74XEzPNTD6LFl5
f1702Z7y4NzoMy3lzQHR59DK78Oiz49VAwyPPu9QXn4r+rxNOfe64PpZNU/T
4HM6xfk3os8CtbavCK5tVNP+HyMu6Uw=
          "]], Polygon3DBox[CompressedData["
1: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
YpalZ9O7yWFmXXq2O/r3azan57uxH39/n57sql4P+P4dj6t7Pe/7v6FGD5nZ
WK9vrNFr/kZ/qx7uyl5fmF19xOfnpD+A4x5cH5dze3p/G/+8P21557JrRE6R
o5tkRLv37/+mfn75vuXoi/v67XyVky/q9YpcLf/d2Y+HfK/nusZa08SL6WkH
9/NJflyH6yOAxwHf0T/jAiXP4LMf3sWv7wweTW4Hr6tXkCpqMqMze31k9mdm
dFavjzbq9dbZvR6Se+X4C3s9JvebKZ3U62P1mXrt5F6/yO16eLMsMxG9vZnA
ib0+NCu4uUZPW+Ot9ZKd2ZsZgLXKGmJWZ6ZgbdlczgNPBX7Ud1ujDcyg1Ivn
0I6gfwLnFuLaiTVeRk8j35xW866G7fn69BqvMKDns1Nr/E7X8/HJNf6q6fn6
pBo/9ncT/jylxo+1PT9fUaMHzZj0R47J8E0yYsdqlS61zRo3Eb9thS556SN6
FvCKXfLYR8HjD5M1PUnJmnatn1Gjz0bp+Xz5LmvbNT4O998MvqXEM23ru+2S
D99fki9eVTOfzbD0z85Z58oEbebybTVz2cxOv3BtjT8xM1SvXwdeoEnGqR95
uc1Y/AXe0bla42/M5PQn5uPm4tYMa8fVNfreDE+9fwt4+SaZoP5HDzmE/htN
vKWe76EST6gXlNNGLMn4Hus5cKYSDpQbb+31+bIl/ub2mnzAzFI/dkcNd5k5
6tcGq0macJrcdn2NPzITVj+3/fuYrs3aubNm7ehx1f8rd9kfeBw84TDJxO8p
ydjNyh1Dx9LM+piaTEk/qN7XH5mpma3pD80O9U/6ATWcWs6M0LzA/ED/aEZn
VmfNmaQmA9uqX99T12RCZkNy1Jw1mZvZmxp3yhp/aD5jTbG2qJmXLNHMamk1
+cI936vVn+35X478tdeoS5TURLWrmn0Z8CqukRpNvnSJR1CrmzEtVeIRzJ7U
g46NY6SXMrM0u1RzT16TaZptqskG1WRgZmFq5ulr9gzOKMnE3EvQYyxYUhP1
HmZkR5b4X7MzNfu/SjyJWv71kj0hNYhaxIzTvOugJn55XMbr4ZI1eVRNxmnW
qYaftiYf85x98y33PC4vyXjdCzGjNKvUI8xek/mZ/ek5Zq3J/Mz+9Agz12R+
Zn96iBlrMjeztwPB09R4LPcLFm3ivfQQ65V4Er2Fa27GkjXtWpRD5BI55Oga
TzZ3iabSq43bZm47x80CvuSeT+h/Svu6Rk+e0+bcV+ATfAdN9rC+qalB1qKP
aV/U+Gv9vfmBftoM2PxBv6/fvonrHzbZg/u8RiOtUZJBqp2ua+NvhvTf7xpy
LcmRx9X4oQf79S8fyHFynfpFfySHyqX6o+NrMvh7S/bAzOblPLlPjnSvZQLw
YyVr9tiajP++Eo40+9cDrFniMfUGarzVSjya2k9NuHqJ51Qr6vnM7vUEekE9
nXtFmzXxenpAs3s1ld5Qz7BiiQfWSzjGrltzdcdej7xQiQbUO5uRm5WrSSeq
8axm+3oSvawe1PzSPFZvasZv1q9GHa/G865Q4sH1wmq6lUo8tlpPTyM3ypF6
HT3vWiV+TS+sJ9a/bdzEK+up5yrR4N/0Gsg8eOsm2sj8c51eX6g3VurCfb5z
373j7Z7oe/14nVnjLwaW+IenarhPDjQbebrGf5qJmY09WcOdcqjZ2gs12ZQZ
ln71mZpsxczF7OX5mrnpHFU/D6nJqsy09LuP1PhdM2mz6YdruFGONMu2plvb
1QB6sWW6cLtzzLl2ZU3e4x6T+bdz6h3w5W0/12r8shmyWfLjNf7dDNksWY2h
1lBD6AUfrMlnzMTNxh+t8edm6GbpS3fxetYYa40aR65Yq432ebYmzzFjMmsa
ra9X8/Za0IxXf6gH0guZ8UxW4hfNfu6tycfNrM2uzXymKMnszILuqalF1iSz
7Ptq8lUzerP6u2vmgnPCPPyumrnpHDVrv78mbzXzNvt+qH9+M3+z/wdq8lcz
Y7Pjl8CnN8kczTvUbGo3NZre20x6opI9AbPq52q0nxmm+ZaZ+AQlmbVZuZn5
hCV7FmbpeuaXmnCe3PdPDVfKuXKvHPQu+Io23DRsl1ppTbO2jdiltrjGXGvD
dKmN1lRr60hd1p5r3rU/Whfuk2PkmtG7cI1rzrU3oAs3uEZdq531q0nNtfaO
xfHLJhx8Nc80XJfaas219qp5lu3r8fc93y/T12Prx7f8noFN9gD0n7/W+GUz
Cv30GF3WvmvetT9yF66QI+SK4bt8l99p7TcjmbIkozY7GdiFG+V4uX7ULtwp
Z8qdo1i/mnCq3Pon/39B8Jwl/vqvmnxDjpFrSpfaLifKjW0XblSjqFX+ruEi
a5y1To2uVlejm7VYA9+if2lfG9Vgb4Mva6PNzDQmL8nUzTqsKWZvF7apNbWL
FlIDqYWe4vhVk/ronFFP+C4H9vVNT6A30HOYteg59B7ut6g3/qjJM8xI9Ptq
jDfBl7TRHr/XaFkzGf2/HClXXtmm1rkHNH7JHoZ7Q09w/YgmewDuBbwFvqzJ
Hph7YR/XeEk9pVnERTVrXQ6QC/Q8eh/1tPpcT6G30BOZHX1U4yXMSMxKLq/J
csx03D95sWYvwD0A88Dzataaz+iz6tH0W9+UeLfXuH5+k0zbvNkxd+wdc7OW
68CXga8Dr8+9F9eMjRwlV51Vk0ePXpJPfQJ+qEmGYZah5/Gzh7bxQu/X7C25
p2c++AH4liZ7TuZ/+mv3Ns38VqX/Xk1WYGZgvuj/8H9Zo8zGzq/hDjlFbtHf
6Ef04Pq7c2vGxj0499ts9gc12U9zT2/Mkt/gXp81z9qnpzNLu7DGT8lpctuH
NdmBGYJZ16s1eah7Fu5dXFqz9uRoufoy2ukl73iFmv0898cmbZI9vVOThw7d
Q+DeC2q4U06UG9+oyVPdA3Ev5JIa7neNuFaW7aKt1Exqp7Nr3p2/yd+2Qs+/
W7R5lvX78d6tH9t3+/EZumfh84JnbMIhcsnLNdmBGYL59ds1WcnQPR3wKzX5
sXsk5tGv12QTZhTu7bxZk++6Z+Pezf8BPFO3Qw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt12fYFNUVAOBldwGpIggoKBaKSg2gIF2pkSo9oSZUQzVUI02liAKiAkKU
YlRKVDQJClgokao0oxQbkKCACoKiKEjLe57hx3nuPe+c2W935s65893Ua2i7
IelUKvW+yCkqZlKpCqJ0NpVq4cCTxrXyhuZHza83LyWKmNdk/XOkUkOddyW7
mtVmA9ifxBT5Kn4ju1t+j7oz5pVZJVHG8Zbyp4y75J3MR6t7SF19+U7RkY1i
E1g9+SeiL5vCZrJW8nKirLjJ5zRzbIaxqKhjPlDdMHWFHS/O6rHBbAS7mhVj
ddkgNpwVYdeJkhGO3e3Yo8YS4i7z+9WNVlfc8fysMuvB+sb1Y78RVeL7ONbK
saeNBUU1817qBqjL5/hb4mbWiLVgv5oXUFfF2JP1Y7nUXMsasKFsFCvG8rAK
rCvrIibK84qKrJu8t7qMusKsBuvHhrCC7BpWnw1hI1lRtjquHWvImrOz5lep
u8PYlw1mBdQUYrezPmwQy8/Ki9vitzjW3LGZxnyiknl3dX3UZR2/klVnvdlA
lpetySTX94hj15qXEJXNY0EuVLdEXSf2vmjDfozvZF5DbMok6/NkNllLsaYy
5jewNs7t5Nyf4xz+i/wWUYXtZKfYz/JyojLbxbLOLW1sz7qy8+abM8n6/D6b
3NO4txszye88kU2ek3heNmSSdXec3WJ+q9iSSe7/D6yqeTVxLq4Da+BvNPU3
jphXdXyk8Rk2V1yIa6yuurglm/zu2cZbxb3mD6mZ6tw7HU+zUqw168hOm5+P
59DYmLVk35lfjHVubMpasxPmx+K3mL/LXo3vLl9rLMheNr4i2mXj5nkezFvG
OhXj5eVFz7jX8Z2VNHNujugNrBXrwH4yv439zjiVPSqek69X25h9Y35TrBuR
y7ws66imu3MvmOdkZYwdWDd2zrwC+0P0JDaPNY2+xGaxN9ibomDO5FrHNS/n
WGvHZhnXyRuZfx1rJHqS2Cf6sMnOe8LntZR/LLqz8dG/WGP5HtGLTWTTWXP5
XtGbTWIzWAv5R6IbG8cms0by/4iubCybxBpG34v+Gt/Bd2nq2HTjB/K25sPU
jVFXK9YW759O1kWsj8XybbwdGy4fq662/EPRhY2JXsDulm8X7dkINo7Vke8Q
HdjIuI+sbvRhn3kfm8cWsdaxztn97Hm2jHVm/xZN2LfZ5LvHb6hlPoktjmdV
5HTtt2aSa34qm6zhWMs/iYvxrIlKsV9kk3U/Kp2cF+cvjx4pRrOl8tf83e7O
ey+TXKNj2aTHR6/fLXqwCbGu1DWJnuv4ULaILWUd2a+iIKvPmrDD5qfZpegF
ogbby6o79wHjMvY666HmgijKmrBW7Lj539gPscZEidgz00nPit51XTbZI6ca
/yt/0Pw5dS+q+2P0Of4kW8+2stHsLjaTrWNb2Cj2PzGGzWcvsV6Z5DnqzB5g
fxGn5Yf4WLYgrp+63vLvxQl5HpFXvKPuABsePUS+QF1X+UExgs1hC1k3eQO1
T7C1bDMbyeqzGWwN28SGxxply9gn7CCbweqx6emkl0RPGcGWiywrG/ecfRHP
LftMfi72J7GCvRy9w3gzL88+jWeUPWt8h21gD8v3i2HxLLP5rIv81ej5rAyr
yD5PJ9fgpPwGUSr2Zd9tNjtgnhG51a2KfssOyfPFtWJvs7MsfzpZo7FWN0Yv
FuPY8ugv6vqqqcumstVsHRvC7mQPs3+yt9h9rCZ7iP2DrWb92VdiInsp1jwb
GM+VurlsC9vJxmWSPb58Oum50Xt3X+7FJVldeT2xTT4n7mc8e+IKJatjP2XT
jK+yN9iwy72kXzrpw9GPz8iP8qfZCvm76h6MHhmfyTax7WwM+5e4ilVjtdk3
0W9ZEePtrC47Zn6YPR57B1vB/iz/UjzCXox9hg2IZyjWqvzG2JfZFsc/YwOj
F7LZrJ38czGIzWBzWHt5Dd9vAnudrWL9Lu8Bs9nGWC/h8R4qprCV8jXqBqn7
VAxg09gs1lZ+r7qlbB87wKazNmwJ28v2s2nsCzGYPRG9mHWQ11H3KFvF1rLB
l3vi5HSyF8WetCKbrKsC6eSexb0bnU164oXLazTW6jr2CkurKy2v4PM+M/8r
Oyy/ShRga9iz7Ii8SI5kv459exE7Ls+KYmxT9PRYb/IrRf7Y69kZlttYkzVg
B81/iT3YWIPVZ/vj2Yt9wNiW/Z5dIb8i3m9YZ9aTXTLPzcoZO7Ee7GLsG2q/
k+cSxdnm2CPY6fhu8ZvZjngGYm+QXy2uZ9tjnbAf5YXFdWxbOtmrY88ulU3e
HR7PJv+DxP8i12eTff0x48/ynOZ3xPPh3APp5P0i3jNuyCb71zTjfPk3ai7G
+754j78dfdbYnLdnafmb0dtZbdaInTJ/gZ2SFxIl2Qfp5P+eWunkXTzeyQ/G
e6oYz16Tr1TXx3krRQlWhzVmP5q3VPdCOlm3sX6vsYc2Z4vYLvk+dZOdt1Ac
k6dFUbbR8ZPsaFzjWENsPWvq3HnGrWwXG6+mMXuGbWY72NhM8ndfZB+zj6Jn
yZvFtWHbo9+oe0RdK/YS280+Z4+xWdGP5TniHrOVjrdWt9i4h33BHlezNPbg
uE6iDPvY8b+z83G/RTm2hz0dz5f8Uir5H/RN9lQ8/+xC0vZSb0RvZYWMVXkt
9nX0AZbXWIHdzr6MPZF9K0/F2jJsiD7qQ543fsg+YVPUvCuqsnasC8sjnxs9
K5612BvYO9G/WT5jRXYH+8r8tz5vgXEH28MmqlkizspLiNLso7j/0cuN5Vl1
dijeM9i5WN+iLNsdPZgVjncRVod9a36Pv7HQuJPtZZPi3UUUZ81YG3bS/P9Y
itd+
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEYwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/Mrw/f9PPX+Ouc5nVPW3tvUExdF0bBeFeZHXWo2PopyucBSrrOC
p6zlAxv5zTZmJERRN4tYrEFzNUdZzwm2cIqdnGc/l8K1eM13betZ91q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc057jht+6EIvYS+N
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT/do4B1reMzy8Fws4a1zV3xT
jp7CWRXYMZv5zGIeM8MZZjCL6eEdMI2pTFGqOSnMTGByeMdM4q8S9RP+05es
Ec34uf3/Hv4AxpdK8A==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
       914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
       697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
       1118, 922, 702, 1106, 1119, 923, 1002}], 
      Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
       707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 1211, 
       711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 931, 715, 
       1129, 932, 716, 1130, 933, 717}], 
      Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934, 
       722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 1215, 
       726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730, 1138, 
       940, 731, 1139, 941, 732}], 
      Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 520, 
       737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017, 1220, 
       741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 946, 745, 
       1146, 947, 746, 1147, 948, 747}], 
      Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 1023,
        1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 1024, 1227,
        756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 1151, 951, 
       760, 1152, 952, 761, 1153, 953, 762}], 
      Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 1031,
        1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 1033, 
       1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 1037, 
       1240, 775, 1156, 955, 776, 1157, 956, 777}], 
      Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 1041,
        1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 1044, 
       1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 1048, 
       1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
      Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
       960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
       810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
       1171, 968, 820, 1172, 969, 822}], 
      Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 1264,
        1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 1260, 
       1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 1256, 
       1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
      Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175, 
       972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 1065, 
       1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978, 835, 
       1183, 979, 836, 1184, 980, 837}], 
      Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981, 
       842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 1272, 
       846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850, 1192, 
       987, 851, 1193, 988, 852}], 
      Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 625, 
       857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073, 1277, 
       861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 865, 1199, 
       993, 866, 1200, 994, 867}], 
      Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 1079,
        1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 1203, 
       1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 879, 
       649, 880, 1204, 997, 881, 1205, 998, 882}], 
      Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 1088,
        1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 1090, 
       1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 1094, 
       1298, 895, 665, 896, 1208, 1000, 897}], 
      Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 1307, 
       1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 904, 
       673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 1300, 
       1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
       310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160, 
       370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430, 
       1290, 653, 445, 1299, 668, 460}], 
      Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
       311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161, 
       371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291, 
       654, 446, 1300, 669, 461}], 
      Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
       312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162, 
       372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292, 
       655, 447, 1301, 670, 462}], 
      Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
       1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163, 
       373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433, 
       1293, 656, 448, 1302, 671, 463}], 
      Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
       1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164, 
       374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434, 
       657, 449, 1303, 672, 464}], 
      Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
       1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165, 
       375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435, 
       658, 1206, 450, 673, 465}], 
      Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
       1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166, 
       376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436, 
       659, 1207, 451, 674, 1209, 466}], 
      Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
       526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
       1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
       1295, 661, 453, 1305, 676, 468}], 
      Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
       319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168, 
       379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296, 
       662, 454, 1306, 677, 469}], 
      Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
       1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588, 
       1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440, 
       1297, 663, 455, 1307, 678, 470}], 
      Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
       1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589, 
       1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441, 
       1298, 664, 456, 1308, 679, 471}], 
      Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
       1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590, 
       1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 1204, 
       442, 665, 457, 1309, 680, 472}], 
      Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
       531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267, 
       591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651, 
       1205, 443, 666, 1208, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
       622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354, 
       562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502, 
       1213, 279, 487, 1210, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
       1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247, 
       347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287, 
       495, 1211, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztvXk0VW///2+eUmYpEZE5mY/5mDKHZJ6SmQZjxsg8z5kiUhmKDBnOYExJ
KmRKyiyhkqFkCPm+nXTtw/r1/bzv7u7781vf9faPtR5rr332fp7tnOt6XK/r
hdXKWdcWDwcHh5kQBwf/r9+f4LY9I4FUyAP632GEQVRIHMzPPJyW7PhXlygi
mKqCGlJh7TjgNclPHnuz4MPmevw5VidoACdYMK2uLasVi6ULm+Q2aUH85F0E
hdU8J+XFrsXUX/s6pQr4l9YxLv+cNFGzw3l1tgQ3qn9yM11u2wiCFpE7VIPk
ywdeVP3kiswpUctsU8KFDDYiRoyLlT+5Q36TW9AzAWHe9RQqvxUNwNtedKtx
s3QL2ZX0H6GYna/4yfMI2SYdv+EKNsR5iD2K/Fj+k7ewm/W6UXEe4S8RvMNv
/v7mT/7jN07gzt//On8gQ2a7+VeOrVQ4DCKRRLCfPJLAK/ci7WnkHG5nDgPd
aZDn6JmoQ1+9VGHj1zpMkj1cAReI83yr90EJttbO+gExpA/4fPy7C4mL38Xk
v/VnRaiRAv7KYvXcqHaYGF5Gjv1mbQLIf0rkvRaifkJ0kOF5K2faHMjf1sIf
vXhVRJTCfcllP4MS4M37Ga/EvysQUVA4/GTY5Dl4XyhXO4sf3vcSuUYnOXiT
PRfwD+RHaYZqxoQ2zup/mYt4CvKXlUj33pskxs7U7mla3LN0+0/nfDXcdq5w
igZpd+tUVTorPsjZonTjiJynKzJwzGmflpsq4K8VEiWeTqcgebgmhzs/poDc
VrxH8uTNo2EXF+pYH8lUAp5SdtSFWDwCRpKTbfy1LQPw53vDT/h3KsBIrw5u
UHLoAD6RRR7i+q5bDMd5rw2r0CjIX808R8LY5ZRYdJQ0PZOHDeA6Ea8kPL6/
FeUyr+RbtGUEfPTmiIP+tbeiOPocTfj5hwHfZ9TMaHw8WeTNI0nWYltvkH98
QXpIzAY9R8lVP3tOsZf5fzrnjwnen4LtWxCqzIIhvLW1Yj/5I/wXSsQf9JHd
ZRlUjnNKIGfFzhxb/xOVyOYurdhVhWjAK553uIVfeIUUYo77nOD3CuSmV8CN
trV+DlOZ1lQi2b8EeJi0fvcrveewqGBE8hLuKOCehHnTfuoJsBPN2fcPFuQC
fr6gyNS5TgLmSfokMuoY9PfCcu9lRVrhd0Q+XFSgg0Ma8MAUH7K6Z/zIlTOv
oig3nAG/4XXi04dQGrHnb5Asiawr4O9CPk+ukj62lZNiFray7h5a+Kdzzj+3
4L2HUw3hfYKRKMpZHuQsQ5Kf1BxJiqwYPhjfwL0J+Otg1khn4mvIVM5LFG+0
IkDOKcX64dzSS0gSVMLLyZFngHMJrHZxPjyEOs3raepGzIT6yS9/dx+qTicU
v6XHSC2xLgO4lVPTq6NV1OKdz/ntvsEFAZd7LjX0cnoCxkKajJd5nx7wZksC
vRfNVCgT4yWDWgN+wHPNpcyfV7ug7iqfmM+jTwI8qtjTfjnIDmYQN6HwzUgN
5L8Hld9nIazJreh7bP9zPMK7fzrnw4TEnmzcudVE+aoRhx3SRX9yf93yZvXI
RISrmlfiE5xwkHO7SG3F0S4d5KMoCidFfUWQZy6hfBPq5ihS61ZdY3nVc8A7
91Kz8nTJoriy4kNc+fHEf3IeVre0q6aOKAWKr29uSTiBHO613160QtmirDjZ
eO49vwr4qIS9dZ1uOOq95oTja557gMcelx6abJlCZQ9RX7p64gvgK1nDRWlO
l9BUk7R2BlVhaPA+0h6aukeRIF4w9WE9+LkzOB4eVPM66Nxtnrcw549Br4yL
/nTOur6aT195dlfFomiVTvg9FfnJ+StaVvAefK5W+DDF2vZyCuTfsaJgOgl7
izhUNXg23fUlyH/8toFyGuI2UnLx8Mkl+SSQ80EbeYNBSRFUvDgiIMuFGuT8
DR1dZiqahhIfNDZ24XID92tKxIyX6d+Lqmgpdfdx6wO8SFvVbb6HHm1TWk3A
rc4KcgumirunT52BLnB9WPtkPR3wxXsvnxp069XM6Z0cEGkxqfnJbe9KlD++
cVViVjAcR07KHRyfYHb4IEFUPy/tW7b2Ed/44j+dcy0xy4unAQRV0mGCOOcW
F4V/cmGcYfwRX73q53skcIS/yIOcl4qCkBR9Hohhvkfw4pNmIGfvNJ/LlyJs
kdPysgRaLPIgZ3mOGxdXBjlQgTPxWZKfWsHfKRHnBClauRaF8/3cIWuHPJAn
v6CXVO9xPjQfvnL0yRZukMNB80xqsdgsNA+eEd/n87mAk8WkUcsyKtcMo50P
8XgrgTx16o8uzlsK1RbRxAoQHhGt/clzk1KDI9MyJIX8qo+hvS+D49ldAnXa
2vYdM5A45G2r+/jen85ZMqzghU9VQqVOR5Hi6zldkLMKiuD2DA5F9Wh3oq3S
1RbwvezB/bGvlPQMAlWbm8RFIAG+x0XCJEVTeq4gvY8TF0aJOkF5DiqPGuC4
oprj2oJtKBxAnoUcIyPZHSLomgdDobfjYCA3h/RDS0t0feg2HUd7S/ZxwAVj
aEiXN9xrPGxHzKWfBoF8UCq8TzpUNWonbE6rjWfpgjwddHAlHF7Y1glyZd6n
feNS95NHKuD08D/9KjWVWa2+cX4CHJ9Xn6yvYJ/F/43K2px2xbT0T+c8kGGN
HrH6VDkaPFu++r4fjPP7jgWIuhJcrxYQenOazTMRfC8PnqwgTXdjRM4f56D+
/IQO5Mno6XLxefk5FNc3fVwB0wsgT4buvXKv9ePQevduZYs3poDcclot26VX
gmpWOoJlHaYSQW7nXZ+WZpKcrtVcRDC5ZNmBHKInAm/qS7PUqbqgXzM1CIPc
Ylxi9nM1sNUL9qRf/44Qqv/JCxy99paYXGyogtfVedBcaUBsbv3MwS+/WZV9
dpZT1jXe+JqvE2vDz+PrI+k81bM2BORrr/JKCrWA+cufytntTaNLUUtfJeX3
dd2KO8PgeR4VlHcbZKqutuRRPup1rB58boxnN1aa89ogR1/iauQ3ngefD+Ob
BmZ479+iUPReiuoen8DnsPal8byEepEaI17nrJcEcpI/+TMUksOfybg2j8Ka
K1DURuonV3WIvHJdyKTOMu7gUs68jfRPfpko5uQFcf36wP19BOOiZjI/eW9e
wqfE+IgGz3PnZEOdQmX3befZsf9w54jUdOPNMPr47rIxuJziy9PfFfrg4qNf
pE0uj8GpNC92BXA3we/1Uygbe3yAa1St7Wsl+ShUfu3yQbszyUJ/Omc6PaOY
Fwl0BePnBp1PLehx/ORtxxkKmOzZ7lyYqPbhD7Dh+sntWQzWLhPiFcntnR+5
MKrE85M3q1vQDhjeLx6Zn1yTU1ji/clZWpZSc4oFS4IsJEyHrH2O/eQyMOF3
It9DS9Np4gtzv3Ty/+TH+Bm9LRyry7694T1S0I4n8JOLHw+r9ogaLf8ckczZ
FMQr+JMHBqTdwcORr6DY+2ryNEE4yIeAKDJPnH+6ktyk7XAa7XHw/d43OZyN
CFwWrvNnv//m6THA0099T0t24udcqRN3PKQjwPmnc/6H/8P/4f/wf5Uzz1BP
LCoJIRdlzmcqnRAC4wc3IrjtVCMnkl37qbx89SbifzrP/xavqimeo6/cRDTf
y6Tt/Ot6//T5650tL+SNsSLNws8SDvz1+0+fPyLZpL/zzWHk3bVybVqBfX/8
/BcypdUcj+9DJrZYtbz763X+9Pk/a64/7RQ8hczDHTb4lAX5wESXm12Ib/gw
cpwQcbP3zIA77DEkC7ohCKOforgekHQe8N7ovm7nN7Nil9kaNwPToOdN8PrQ
igtcGdYUcuITYsYaHL8m+4TMoLtYjLSHeZDKHQGOz0S/s1sdE4U1puJw4t9R
BsezZ7XJptwSFevMRjgOsMPB8boeOMf6HL6I3Z8zC0ZUQq+Lx4qaIl1OFBUW
dAyKVkwH423Tj41GDt+uiN0JEJ5f6YgAx/fMXCHDU3ok0v4oQ7lNDPLGEovD
vac4xkWdZC4k4ud9BOeR2vb8ubs8v3dEf80dIaRwpy9NbpdwM+AW276aZJev
xpGR5GOYIBC9c9Ih8uorWsDJI2BW+HlUwkqary+3xR8D5yG/FHUF1pogwuV4
lJ6vthJc5/ATtnkZgVqhpYv2VfS2r4HHng5d2KP7+KxIubPB889ikeD4LMz6
woJAOWZ9YQCMz8cwPrxLaB7jw9HgPJ+OuUe9eHnoyEUGWV3fqhGw7hBKXN+n
I8rHbhKoJ5QWObPbk+/6+XO8yoD33atbF5GZXESXVaJPgPH83r1mn749TkQ2
Jx6mn9+Mh3yp4JyfoqcEzER/mebcajHgJ1KCo/OeRcKmjNi9cVzvAk5h48r7
YsofZmH20W+tKQFwOdY245sa0rDP7/lzNNRUAT8m3W2+EN0pZkRl7vnKbBA8
V4rb/jxklz8P5GhNUYw8Ilb+GD/QyU0ScOksJqbsirei5Omkg/BUZsirO+BF
4dq1i7KHXe5/WEsMOCHGqweLdGC8ugN4fzkT/W1m68g5ErxN5O+HPNvt1f92
zv3frHv5+E8jZ9uYbsFOK4CcL/Utc1DSliAZAoPaVwhDAR84ovp02a0T+TZ2
km68rg3kMzjvzlfoVYkcPj4vN/P1I+AF368Fz5s/h91UE7J71DEPuKu/Vfvz
9WbY5P2c+0ci+wG3Pv7xzbRvDCwo/91T0pPZgFtt+3PXXf48V//NG8mCFTHe
fWrpZtfloXWQQdd6tb1cSDyht/14Iw7Q56ppay8Ow36kmEv17bYNQ8BTMV4d
X6wR49Wnwd+pSjul5aGyBs7o9yfE1hN9dnv1v50zs3HEyWFDIqROlp9vm9Ia
8FrPDIobmluTkVQ3HR+RXAkCOVP6hYip088g15L6zj41bAI8/uSTA9e4qFB3
Sp6yuwuQQx5m/dzV9td7ULQXuKMDEo4DTlO1fGoghlTcUYjFnrtdEnAZPlkP
pfuU4mKEa90UWdDxxNv+/Nguf07+nImd3XUfqrVULnZjiRdwWbqgIkkRR5T1
aAOb1oMowImeW79PoTRGsXiZWq/e9AE8AOPVDWBqGK8uAb0vVzmVGXPluZ/1
rwz6K36787s522q0zETPxiIOKrh4V8mFgJwbFi92SEuqIR26Tx9NxZEBeaqc
rDpzqbMXebKYyZXfCMqZmv7QFMzgOMrINjqh7v0XwPefw1E2f2mI8scrmDml
cxrcl1rs9wtP3BxQgnvh0mo3/QHfmH/4pIrnIqrupeHmjFkG4J+kfvhz5Mmd
/lzOvOWM8OsJlIzdm5E9q/OAR17HG3pP7YJe0PoecFctEHiho5VLRrcpLNGR
WVx16iougOtivPoV8TSMVz8DzhPOyq1jpZzBMx18VPg+h85ur/63c4Zl2hzD
d5ivZtkf5kgzMAE8DNHFKdWZnkHEvgwNDxm6TpA/WQrK80h+BrIkIlD40tUw
kKdvgs1NpBI7KsEI/9JQELQeEahrSMW7NwglcY/GXSHUBFy/LimJcFYhCnVk
YxhpoYmE1incRHvePptDkXzATxMWXgKcwuiHP0+q2OnPbVCkl95Rp6Lf6cRo
BeGmAj45daFJQVq75slsRjoxnR7wbFrfBmGu4vAaObyaNmI6yAObYrx6iMQE
xqtbg/PcES5kOVHcwTt5QWz0OXnIbq/+t3PGIRuDhXw8VV1cpOl0zREOeXLL
nCMH5Z0R1U3ipQqS+iBn+4SyQ27vTZDUFR2rMQ6iIOePn5be6QzTo7RLo08e
HESBv7tOufJxvZA8VAXlzGxcdjz0+RBdkXS5hxytqpJVGY5PBu6LdvxNSQ/9
BfT5mcMaFqyugC9l/vDnbcw7/flBgkNBSkaKNU5H3eXuvJcHuV0v9Yy6ksRb
uymxLneo8jjwljbfJ432BDPWNsg35fsiDwOegvHqkZLsGK9+HpyHUlmnYhOO
f+yWClvf94Ka3V79b+d8pTyT+gXLnmrxh0d6Bx48At+ztuJCZxRVDBH4x4O9
mR8Jge9l12W+aPiEOzLCJk3E66wlyFOTaqDSE+csalDEABVAYQTy5Hl8dihF
/DA68/xVGd5i6DkcDwidSTqKQJOz14aKHnsIuIuMgk82u1LNZ/MUovXpU+B+
H9TRYvz5a9HRHf58eEp6pnVEpZbfwPapl6oOyO3p9MmRBFPLuqCwt+asKo7A
A1/zuy+6/6hOndANApVCS2PA/TFe/Z3UEMar94LzBCL8LkWxJPGLfTSvIfc7
tdur/+2cc78oUrwNyah+eIW1p74jFnzPovuUtRZSaZEdfDVJX/UpQZ7L+yy8
rmidRV1LPqbw3cgK5NlaIsc3qu+Pjr1HoibdGApy4z5ZHp236FRz+0GXlI6p
D8gno+LyohqZcG1p5+UXhNnK4L5aWAxDrsjN1wbPw99QPMIHOfi0R2D8+cGN
xh3+/D6C/ZCtMms9aUqrHKulAPDn5cepD+A12zVo8zj2p2t5NfRt+14WMv4N
83m9hlNl0YYP1u0blra5C8ar75d1wHh1KuDVXS61R+0L+ixAUuSNaG2o3e3V
/3bO3y8STLD4VlR7oO/JtUagwedGvvpCPLm8BZKrjWe1NsEWfD4cU47DU3zb
jxLX/OxR6jAOPofhkTxKifXsNa56clR9BALAkwuUKhux9ynUohgy4eo6WsCT
Jw1uvpoSkqzLI8pKG5hXAp7cJaS7jF3iaL1cXMQxYhgf8OR71tsw/hwhT0GI
7c+jbBvZG6+HNgiGX+IUGQqSVd7Obc83s3z99xONruf24x8JH4bz0YgQH3kx
Ds8P1R4bKquCPxlWN0DxvIGHnr8QeZv+Ezz65vqhUY1ueEHja/1jX+/DW+5w
fN2TOgu/q2NO6v9uVIj2AeNN+HL4bq/+t3PuDTZYkPjGcmfVM7DIYfYs8OTD
3zl9pEjW7qpQUnXm6cCBJxc/yzHQVZJf7IZ8Kd3V/RF4cvmbWoU5xawl8Tf8
XIesHYEnvy8mitbxdy7d80hq1fUCGnhyGQJnQzvH1LLpA5H+99rHj//kl/uR
rhFR5eWkSpcoxoPWgD+XXcdFbvnz4uor3Nj+/Eh3IpLggUwFKXm911PFEJAD
ksDzctGR8cqeSIlrLtqcwJNb5dwmTtCeEDZxuf1t9AQ/4M8wXn1KuATj1ZkA
X/lskZOFx8Z5fCY8hM2GfbdX/9s5/8P/4f/wf/ivuMmESJzSlBayLDos6OS0
Fhg/0DdLXWOqUoBN7KG52loK1TM4xFx77EwmBfPk9NYdVdQEnKwwm7bFcF6s
SENekqfsGxjvJdLwFc7pu4ptPkDXMzf6AP7qTANZ8mCL6DcZmbuq8C4wnmG6
Scgq0koo+sBLR6h9AfJ+Hjk/vCKOhu0Or7j+hGOZjDRPxCH+Kmn63BMw/sx9
QKSk+9hVJI1eFe+LWAbg+y2ye25/HRTSfc3Z31o2Cjzer7zfr/zer/IsJCSS
nu64iPQNa6+iTYL8m/shM42urwlIozptGqtvkDcbf4t4zLA3CLZn6EJL0fAd
qB6SwbzhXrg3bLkG3trJEw34Ev6IwKvb/DDBzmXafiFJqN54nTdudqJKTHR4
2myhtAnkbMo8J4hOPiLmvL+GT/yUKODGaT+860T+8g7van3ZGW8lYEw0xEqk
UW11P/R+Tfr14tgNiZr4JxM/qoV4+/WZ8RC+GJFwf7QSqi8B5PwrX/qnvKjZ
LM29VL3TSFaZDuZGL8i/jR0NPzDrXoIcafU4S0AL+bcOedGALsUOZOnx2+gg
/Q6Q29dsrx4J0nrYeaSD54T6FOD8I8FueDoImDQtNfHXz08BP5jSV/HUwRXG
5uakdo87GPA6YpyWiPY9sKbHcDMVSg7AjYR+eM4XzTI7PGcV931jhu5viOUS
jWGSW+Lg+FCLMSQ5AyfyjMuxnLYNe8Ab284VhUmTie0ToR+AK1P81zynqZEG
oV8oEZLlnTnNhh/k38Qt+B5JMV1FesgNHx/rgPybWmRp66WKGeRK8SPmYEfI
Cy0d4pDAkdiHUtvIMeG9sg/MRz7A441i9T/DqoI+uC2LcQHO4eBDc1DpK4xt
ei6E+wE14JR1JU5reigYQ5Gqd1km9H5ZMNzFeE5J89YdnhN1MoP+FAMFCnf/
zQOrMTzgPH2v+BjvUzqizoVX5y7fhPxb+O0+l8VyExjtour1zPdn/mueU8Kd
Y66TJQ7RneZRHmcN+Tdz6zM5AzfUkFw12gdiL0P+jY3yYfxpy5dIuzyhlCeD
UM7aVbVmngcFUFVpU/POg5B/69YjhSux66FEHJ9lhbbrgfsdMFe4qFythHJz
Xu8LEL4EuEZB5qlxTX2U8aAvo/EhyMt1eAtjPGcr6uoOz7n+yceGuGMCJREi
c2ZmEPJvBs0fqRYoXNAz9pMf5FQg/yZzbmm2WiVQnOsuire1Nei/5jkXxtnq
eb3nq/NEhep9P0P+LVJsufIb3RCi5FI4g7A85N/Yyw/VHCG9hozTmvBwJwoH
eeqf1zj0oZEdVcJURSCvhQ/mfZ22J9MOKgSh7HAvaT0Yg/ybTGWeVyNdNYon
rFOphwLyb1JnhlsXJidR17nVRlwTFgD3o/HGeM7gK9M7PGeSKKcZOWUq+os/
zgvRDajOzcwpQjlYSrtG6GojspAW8m9JBrKDNSGhEuiYt22qmpf/a57zgaPp
965Pp6r7X1dRrThD/q33bUOKl7oz4rb+W31eZci/WVw0a61bNkH6ZVtOx0RC
/u3r5XcEZfP0KPLZD11rzQjwPNDN9ZnoxeehDK4pTkeEQf7NKei7EvspcjRO
mH3VoXZScL8R6muEx1LPoZN13osNuEK+N1Q0HOM5rxl07/Ccvn5Xi/sMFWte
kAlbH8Xyb7WTkq6OSby14Yiu58RY/u37QnOS1sM4yY17LPdJtDz+a56T29Q/
p4tlT7Uhyn2iBcu/0bNMw1VVDBFV5Dfc6bD8G6N3tKvShDuy4Wwv2gXLv2ln
4uadxTmLaiFHS1pi+TcLJUIbUrHDaFbr5THJIiifeQvOc3voEWjxyTVJG3bI
vzmuRAlvbCjWNI8mHIc/hfzb155Niy3PeWvczRLbc96mqJqtGlGp3X/PCccO
y7+RWTzkiTe1rHsT4kB2GMu/eYx5rGdLfpTqih9ph0W//q95Tkfrzn1b/o0p
tr4b279FZaqpbPk3lq7rcdj+rYiR/OiWf0uZ7sPB9m9LtUxyr/X90TRf8rPF
sfybxwUOEdNFpxrT2ufmh7D822Xy16WZJMK1kU8bmVyyIP8Wig67qS89X+vm
UP+aqQHyb9Tce0tkRT1qzAuUOW9vQJ6zCy+T1lqZtf7Aa4KnzFj+TS/hwDPc
ZruG4eNxcdj+TS2jol1akkmWzEZJ/sBjOuDZ/tOeM/IiPca/Mc8n7vBvNwMo
fvg3D5YVbP/m5ky1qPC2H2VH/94R27+h1xrzE+rZa243rGa+xPJvHEePDzP1
KdRyFn6VlMPyb8ylsKDrQpJ11QOhizlY/m1OgVLrgvjR+qL0a/jjopB/ExAX
0bKVZakLXa4RkKiHPKcrauhFw/XQhjMfshHCWP6troYze8u/ffS+P8caPgwP
nhJi2PJvM8HqAontfXC5JJW5oLMIOG7y7PP25k//cc+piqkTLqjs39iqEy4F
dcLPMHXCqdVKmDrhbJB/zfkbceTyWkgDS/m/8tcH+fdi6oR7UHmYOuEhkH8K
NWP8lxnumiNL6nh7iERA/gnPSIeY+nRrHdJTpOV0LED+Yqbpc6ozBnUlUob7
Y3StQP6XtuuEPXfVCcth+NF6AQyH3pcuTP2wfcMlTP2wjezCdv4JZBydVJ0v
G1UvEJjO9r2A8+9ZciHH/897zvnTW3XC7/IfYOqE2UGdMApTJ4x/xwhTJ6wE
/GeoAK6PFMnHuy000y/ydI4D/4nC1AnfLO7E1AlPAv953ctDKpyeo4QCQVzR
W+cM/GdHd5uhtv+VUiMm/TWXC0+B/7Rs3X9XqK6iLOXMpPmCOw7wnELbdcLT
u+qESTC8vDwXwyEvaoepH2atmCHfqh+2A/m4Edj5FR3prvRQfJ3uor3/H8/5
D/+H/1+4d6IC5ctb+EjDSAPe6ASB3XWM/7+5ztjcgUrrsVWxD9ez99nNHAPX
ubDoZmqYpYNs4OhJtRI6Bfic837b1b+O+94S17MxvArG+RSPQpxgCSdgHHso
Gd7duAiO16J6pPBYSwGWvO5XZssG7aOvruxJUaRfE/Pdp+YdyUIEuIT/AaIP
+cFiQiLNUhHNMWB8660mIIrDMS7KfzGo1fo2VJfIWeQq4YkrJDq5/jmNNlUe
8GP6TpWDJHkiVo41C8FY/lBmYMogutZD5CT9J3lGueuAk3Ulj+ERjwgd9V1Z
XDBoAV5L6FHY048NwuynokjnRVe//LbXYreLIZm9eh7potPpaZYmCL5nmxWp
Cuo/MiNlZWXaZdegffGdspO4WmvxyIcRr9uOtiZCXstDNCHzQCjsWYkziyVJ
CeD2ODwcExeCYMX3uUXGridD+7I9NO3tJKRhlH6t5zMkoPq9p+JqeHCjNrFZ
Mq4xeY1+kDMn24xDJJe6mFedOTt/qQXg3xrm9pZtDIm6K0obecXSAh4miiu6
5Q8RlHP9D7H84bzgwyJClRgRR12UsZymG8j5+8nWW1yyVByTBPaMUl0vfttf
/YrPfGk4071gjXQLtp8PkFMGeeJV57MmZ20iRtVqFvGGZsFzO5nY5ROMdw+J
cyuF8sNhGDi+Xz4/DFXUhox436RA4NcJecIPJg+c7zbB5NbOiwpOQXV9rEbO
1HSHmmAz+o/8g0l6of3Rd1BCLgkhMLzJVKR1J9THwCegs2mETgAmdYH9GpmP
OuCPH1C41HB9QeDylTsrZggCbrP+hbJalg2pWkhXzfMdqit2MJJEHLUjEZuk
EpJa5J4Fz79nsrjVlr86taEg/u/4q1/xJV4zx5MIZWRNOCkRchqa16sGLazc
DUQgHujJpJINF4Oc5wUKVYwj7iLvrY+1v2+NBMfHWpCyxeyfQXKFRlNI7K+C
1h3eHs8jn9qDqqlQEstUpgLzrNO610zwTy7DnpPcb1G9DO1bd62rpnv+CE+8
ITPC/aQqK+C35TjP7Z3pheWm8gzMVBBBPmTvh42+ZlzUG3Ry3hcDZsA3ZZJO
t1VbouYNp+bu0EP+Cg8/B38lyAB2ft8C/hqWv+ruEJyzEJbmVvO6yfsc7+tv
+6tfcdO7B2nGcHGQWez+penRX6B97lM9e/vc4Yhrj9PIsttFAV/XO5EeS5qI
HOHVqEsgCwA5K9cJZszgLyDfJljGVRyH9r/XVYkStpALoIakvltOeO0F97uq
F8yGytBF1VGSU9w2gbyBbsZB3yBmbRRHghAxnkUAVH+iiooIRbqgSF7eo9Dl
TwV88hxR3/DLLlTL/r+myB8GAU/htn1LSGmJViPkCzuHVadXdeZzdauGl3it
VQB3Ub8hON7M89qoImsczzujMoVbZxV/21/9ikek2HO2dkQiYlMZSWmCA0Ge
ffccyTdlMqon8XGvq8cngXnTEWoPt3lNNaQmrw/CgA7yt2EytL1qia+Rej5i
CimnHgN+5q15aRqvNKqYkmj8yAARmE+FhH8lrkReQSWhJ3TcGs+D+1Uden16
ZrMKJWCRWnuXqwbwG05Dsee/LqGsTL8k3s3BBbmJkLAoyjF6o2fgJh+k9ngD
fqXsXathj0gNyZTdI5lWSeANuAnqVRZvuEs4lDy77yx1Ghyvv8/Fak8Uijc8
a9H/ve/F36/T+wXv/pbvUuAwX10zqwC7hVUneaRmRouKq7Mqj3UjYUGjBcwj
Dvi20hzuG0Us05HyzrZ0g/cl7mGoQ7fTTeSwPc7tMv14kPMKt7WuDqswKmpc
sTeTlBLkzF974gxRVC7KVftk9fjRYJDnxbGlrwX6OOhJ2RRGo7LvkI81rMnH
5TuPZvzmrbH6Dno+q8PjmLQE6GskCEQ0OONoQZ6jnbe/wqzxao0p9YY/sxMC
f3LJemOUKt1BkvfKpTa4jyY4XpfYpnWsbZhPm2243U039bf91a8433Y/gce7
+gmokkQ8oVbkre6lc2Pl06cCvGq7L4Horr4EXKntbGizl5Xzc/Z18XSPAV/Y
7kvQvasvwSvNqXMPnlohKMX5AmBfoHr+iO1+BfW7+hWst5sQXRP0R4YZEuD1
2dpBdW7bfQw49iXs6GNgBTdePTV7ARXbr2IG32cL3q8T/D/6G3juO7+jv4FF
AMGakLgQ+twL90zRbBHwPq5d/NH3oNZhZ98Dy893++6c7kFHefJ3UDwYAfzt
oeuYes64ROMd9ZyH2chnTwS41iwwSVBJslwB7+/9/bmYPgkJDy7v6JPAfLPk
PnJEpZYus1jFHsuL9nZYYfonBLh92NE/QfiDjZ8fnXUd24B+TJ7/BeCjgpP9
Q7f6KnyIUxXE7qsQGPCRgJTyi9QQnf8d85ExcB4Ec5n1Vr+FRpXyGOx+Cw1C
7eQm39L5D/Xt6aHyMfptv/ef5nj4lYSixKnV6WP96gn3I8E4R8T4jdIg92Rl
wPJZrcaiblA/cIge9+KFNFpktujjpH0GkL+Vds+5fKfZBnXunVW8E4EdeE4K
JOgobXHC0TXqThf6mBOg9YI8jQjTRd+aGP+R2EOmUSDn4qMSVNOxmrWm2t0H
UxYtQc6aYkHugSYMdXJ1FU/4so9BdaQ1EWzS2Uz11xdJPvpT8wFPy4d/GONp
reySdnja49TSZYZRrLKHV4kmkYcPAk+Io5DY7yWyJHDpTWlucf6D3/aEv+Lf
OF63chWUVffYOnMa3i8Hnw+JJ5u4uNnGK1NMSW9b334EPgekKt8XTbwxRnJU
Fnk7I85CfUhSNmOIV/pRm5+4xe+ZQ/52g8Yns3KOu+Yb/zrtAQLIH5726pZX
tdWujTIja/FVMAb+sElh7vOdMzp1/gf3NlbzmQB/qPUilSM6XL1eB0/Ysfjm
KeAJU4j4bUTd/BsmtOqG2MN8ZG9u59lNpyljc2y8MYKEfr9r5Bv4sne3JeuD
STjaLkppy9NK3Hx5N/gsAk5CMPR4y9MKhLljPOHz5LTcf8cT/oq/xPjY/OpT
GB9bAnK2x/jblkpcTJ+HDpBzP6afgx6yG9PPwQyap2x72ru7PO0JTD8H9hod
TD8HyJPXY/o5qNVmYvo56IGcpTD9HNTrDDD9HPRAzq4YH3ui3g3jYzVBzl8x
Ptar4SrGx3rINm/nnGFEmc4TNtToyOCTExTzEp4tsTeF6MSHX/pYGUw/hwGh
Qkw/h+A/njNCKofinRzDnUBzNoaabGPgY6kc+S8++kJW0B3e8zz/mDrwtz53
eCUHw5fuRlDOGEYxSAJPe3Ho0uutOtW9JaOS2HWqudueln6Xp8UnDGR+KONb
6pnh2hUp8Bh42rJVVnrEo6Ky8i5EEUXQMqhT3fSdHO8q7i1fSKlFMQiyAk/L
wFyniy8nWqHWGTvqEOYH8vElLmpvkRiulEON9AydZwPjpaBcgxMTlp+EEzoQ
pVw5R/7xsf/wf/j/ha8ljZuQpp2A9R42ylt6DnnLKvWr4hruCrDpBJ7Np2qQ
t1xPufrK/OSaGM87nnWyk5C3JAt6VxnQGix2WG7YVnsJ8pb750XwcqTHRaeM
L4raP4S85cI6h9IykZCoiBy6aTkD8pb9gx+9tvzkBIuFObaf1MwwJwzNHxUK
vT8WE3irB/jJYEx9Y5dALKa+EVo3zMP0TV1mJcH0TUX/j/WNv+JyDw5QdnGG
wr4Pu55Qc4B84wemoqnS+iBYc/3wMP8C5BuXinB44qukYVfkJLPgOZBvNHuh
0OJY0iZWY/2Wtiga8o08l+piFWXUxSaE4dVL9ZBvlL3NsikjEy+yxlxO8lA9
CuTwElN/2CQ0jKk/vAtyYMH0L6Vn/9621b+077c9bbdSOpN2XRMMsbHoWxYy
A65/hZOe0jC3CTbd678snw75vZZC4rMumyGwHsuVR2ECqVAOkgmPmIQEYCSj
+5hgSZDfWwspuEuo4ifSTT1jJKdpBe5rsO7+LS5ZXA5HcwlGqa7G3/aisxlE
EjMnl2ESbJZpd82hfax6tHppbfH44p+vNB8kewD5MRvT4bZN25cwtNJX2GQ3
5Mfit+vikLvq4gQwfTVRnLiYvpoev+0Vy/m09QrrtFGX2977mA1BHmme+PNH
9QQX1MNSJ1xFDcgjrSX/qBN79G/WiYnvtUmnG1xCib9dDH9jD/mTf/U8x7br
c0x21ee05TnG+HGZIqQnbuDdeAvV5Ubx6quxv/ZDpqVqlPTNQvPcgnIndOaD
C6jPMS6OXnuh+Wxza0XScxEhtK6h/8G5LGje2t0WvyD+1/x04vU1oruN0Px0
3yyLkvhf89Aj8L0N3FjzUJlXY4Jb80d2pw4x7Pnjl1MNYhMUX6Qe3nXnrsCa
Jxph6m0cJEd9t+ptIF/R5rzVr2+YjwHTr+/3fUX8dl0N+666ml6J/uSMv+Zl
zxRxcW2w5mWURvvmrf6al03mX5rpxZqXUV6gE9mal3kiH5tjz8sImgWItuZl
ZV/U6LHnZcJl8m5b8zJy17QW7HnZCY6J0q15Ft4yzRT2PMsOUw/zUuoJph6m
GZzHF9NPz4+/E9NPT+q358sesCZMHcWdic+42HUUR4voXAdttGtVjDYFR7Hm
QTPcH1/c/GsepNcsVdmCNQ/K2beeG/nXPIjjzaJCCdY8qM1a6q/5I5Vsov7W
/JEM3JcPx9b8cVLgbNvW/LH8t+ePitvzC61d84vG7flF1q75hfj2/EJv1/xC
cnv8n/dvjv9xt8fbHrvG26Xb4+2yXePtf/X8/yo/njz9vS5BAGl0sf+IVR7+
//r6b2wppZDOfSfkRW4B04EyqK6+f3xf2vL3IdEu++pTN7DW9bq29wXo79oX
sC9C6qvNaU2kS5mbWx+lFDhPjEPRA/vpO0inZuK2qPVAaH2T3aGQkfMLIiza
WzIAaz3LXzF139Z6VpS30R3s9ayTSZcfSM99QxiucNxGuc0Dr8jhfnGdwi4a
ebMiPrcz2xucvzCjzCzIZQopnq93kT60DnD2z8pWDs24qIIbCo9sDKH1HfPF
cb/n1ZaoS1dGLfOx1nf0qF8UaKTqwXLkVeMKuaHrkTbyI/d/5ItIzOix1Bxy
BdfzudJnyl5cCsnhIIjH5XwcvG4DR2g/99Qz5EQu3rWSawjA30hpvkp+zYVK
N68yKPCeA1zgxRgezcsulIxd7mG599D6SAnuptEChSVaW1/eRh5rfaT5/WGO
E1WO4ng55B5WhpHgeBMDPflLR8xg6eXZPeJlcHD9D0xeaQwr9la/RqfRJxA/
A57hVmCleUlzM+LAW/v9RUFIcF+zAgwvBNXDkBKOVDcWqdzBdaIvn7lD+IwO
NTBVRhlL+hXw+uT9d7kLvVAloUrlxrWnwPXUFRRyeVF7ow9/elPnsuEFrl+O
/oqRYbdITYJs4kPRFmg9wjIvNTA/QFOixS237U5pMDgeTqFf0qQRIV5xrFzm
Vr89OH9nU3qLAms2z5jjVZebZ0+D9aBH+898YF5nrybKpnuXlE8N7nfvQe02
beMTiNWBbEezrGPgfq+cW2ld3yuGnD+doRGqSQ3u61toTPSS3TKSb/aoAFFh
CMhz7wKcUr83BuUaKLDez+kBrocw3Xw93n8dRSWUMiPQtwq40hwJuS4jfY1u
MMxC1RtaL3DpOcG8YIlXe8E13ITwCLRe4MmXSEv41UKSQOTMuXe9VuB4IQ+h
b228SRJF5y7h9PdAz8NXl4G0t14veQvtrvSEFEf/9npN7hgPxv+bRwrs8P/c
Q9OYdQSyYpEd6whpHbEY/8/ZW77D/9P6h2E8f23yoR2efwBRgvH5uodKb2D7
/GhqfLItb385rWuHtzc9aCi95edvneuNwfbz7fOmWWaMyjXntIc0jLG8upri
j/7DvZo7+w+nb/cf5trVf/jAdv9h7f/v/sN/O7dvGUem9fBTq/sqWzZEsLw0
C88pjO/9Wv/2A7bvzXsRlHDatqg6wY/Dy0m6Ano+cw1ZRcWMkeqPyrSeLEMe
lbjxC9eWz2TuJNQ6iuUz6zUiJ5+EjjeyrDM+xCEZgHOZqq7Qn56E2237Q5xd
/rBv2zee3uUbX297xZ5dXtFt2/u57/J+M9veL3aX9xtTP2KuHzDYODDYrl36
vBf+IJf7oW7lh196tp9e7souL+e97d/Cf+Hf9u3yb7e2/RvDLv/206d93uXT
Dm77NPVdPs3nFz4tYNunxe3yaf/qc/IP/3+bP1OzZx4OkYL5+ySls+WeA59v
ZzZfKVcaKMJUEC43ZpWhfWevmgKOvikSgM1+rrpvKQz16TomNFRITTcndoRB
Rgp1dhWMu1i4cOL8CnzF+g8aNwe+CgE8mUrTE8Y0IlqXzJYIvz8Fff5s18WN
7KqLK3Vq0XHRDxXpuIjsm269C+atEcmyzQ/vG4pMnFAdvskeCLhg5MB1jYxn
QnLJWUtfjlYC33KOMdN7bxIHe9OKj2lxz+Rv+5aBQOGDnxS9YByEC9GpU1A/
OoXEfo+N8GDYPRWRoqq1G1DdIKFveuRpN1h+CL5gz1noe1nAl1xs74QQbEFW
luKhmBzgxj69SNnbT8SUZJ0S+hR7QW6Htuvczu2qcxvKIL9hdK1SVOMzjIUg
H/r/O9WVa0zGx91EhpvOsRfbGkF1gyPDGG8jdS/l3/I20jWXr+K+L4dFpZI5
FlyaBtd/XuF51LfbTbDFephPocEY4IxCqwepI6thQYQfaFwOQPtY529vqtVc
uQL7hifHLN4F1Q06b9ebCe6qN8MP6WH7GPpWVGlw2jGRtRXcrzt/IpI+9g6n
L53Q+rq7zW97HhIyh8cGsDZYa3miF3UZN/h+D67PVdQS3YSZNde4cDND+0N1
Ay2yKS9vwO5Sqi92thwCXGi7jqtuVx1Xepz87JanUm7sYcX2VIvUfeJnhA9x
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-10, 10}, {-10, 10}, {-1, 40}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.678197887931818*^9, 3.678198019843172*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.678191743338428*^9, 3.678191743365819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678198097593575*^9, 3.678198116339199*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Maximize", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"4\\\"}]\\)\[NoBreak] is not \
a valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"Maximize::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67819811821179*^9}],

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1.1417812839008868`*^-35", " ", 
     SuperscriptBox["0.3`", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", "c"]}]], " ", 
     SuperscriptBox["0.4`", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", "a"]}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.5`"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"a", "-", "c"}], ")"}], "2"]}]]}], 
    RowBox[{
     RowBox[{"Beta", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "a"], ",", 
       SuperscriptBox["\[ExponentialE]", "4"]}], "]"}], " ", 
     RowBox[{"Beta", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "c"], ",", 
       SuperscriptBox["\[ExponentialE]", "5"]}], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "4", ",", "c", ",", "5"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.678198118213482*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.678191678024941*^9, 3.678191678053338*^9}, {
  3.678198088613678*^9, 3.678198091560583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "=."}], "\[IndentingNewLine]", 
 RowBox[{"c", "=."}], "\[IndentingNewLine]", 
 RowBox[{"d", "=."}], "\[IndentingNewLine]", 
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}]}], " ", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6781981370205584`*^9, 3.678198160875972*^9}, {
  3.6781994280601377`*^9, 3.6781994317801456`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1788.1032506737738`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "7.032217820535263`"}], ",", 
     RowBox[{"b", "\[Rule]", "7.437771712494836`"}], ",", 
     RowBox[{"c", "\[Rule]", "6.6052163971319775`"}], ",", 
     RowBox[{"d", "\[Rule]", "7.452107447674661`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6781981517798367`*^9, 3.678198164716777*^9}, 
   3.678199436124947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67819848410497*^9, 3.6781984967672253`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "unfl"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Underflow occurred in computation. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/unfl\\\", ButtonNote -> \
\\\"General::unfl\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6781984977322807`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "unfl"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Underflow occurred in computation. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/unfl\\\", ButtonNote -> \
\\\"General::unfl\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678198497764881*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "unfl"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Underflow occurred in computation. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/unfl\\\", ButtonNote -> \
\\\"General::unfl\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6781984977910957`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \\\"::\\\", \
\\\"unfl\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678198497831155*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "nnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Indeterminate\\\"}]\\)\[NoBreak] is not a \
number at \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \
\\\"y\\\"}], \\\"}\\\"}]\\)\[NoBreak] = \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"68.01350877881805`\\\", \\\",\\\", \\\"37.489194689629514`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \\\"NMinimize::nnum\\\
\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678198497954637*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.633647783729222290843184971062413`15.653559774527023*^-34952", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "11.402842087628791`"}], ",", 
     RowBox[{"y", "\[Rule]", "5.638326114631237`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.678198497955439*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.678191645540616*^9, 3.6781916455539303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], ",", 
        RowBox[{"Exp", "[", "y", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"y", "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678198551860778*^9, 3.678198558887227*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0568196590178647`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.07793628055291042`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.2118443997276015`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.678198560602001*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.678191631386167*^9, 3.678191631412612*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6781994568216333`*^9, 3.67819947359632*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1788.1032506737738`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "7.032217820535263`"}], ",", 
     RowBox[{"b", "\[Rule]", "7.437771712494836`"}], ",", 
     RowBox[{"c", "\[Rule]", "6.6052163971319775`"}], ",", 
     RowBox[{"d", "\[Rule]", "7.452107447674661`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.678199450578466*^9, 3.6781994764861927`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678199586856029*^9, 3.678199615926256*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6781996188746*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6781996320591516`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"k", " ", "=", " ", "10"}]], "Input",
 CellChangeTimes->{{3.678199644221208*^9, 3.678199650990155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", "10"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.678199641397253*^9, 3.6781996621411*^9}, {
  3.6781996976499033`*^9, 3.6781996986291656`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6781996641578712`*^9, 3.678199701077454*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678199664155815*^9, 3.6781997013850317`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6781996641578712`*^9, 3.678199712051281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", "10"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.678199720655287*^9, 3.678199727175363*^9}, {
  3.678200057904106*^9, 3.678200058785589*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.678199722491702*^9, 3.67819972864526*^9}, 
   3.6782000611737833`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6781997608039827`*^9, 3.67820006146285*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"194.63377302758158`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.059240134655895366`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", \
ButtonNote -> \\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6781997608039827`*^9, 3.678200085080381*^9}],

Cell[BoxData["194.63377302758158`"], "Output",
 CellChangeTimes->{{3.678199722491702*^9, 3.67819972864526*^9}, 
   3.678200085127803*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6781913953945723`*^9, 3.6781913954185257`*^9}, 
   3.678191568685883*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", "20"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.678200098725626*^9, 3.6782000992625723`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.678200101509552*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6782001017815733`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"128.3673189621361`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.006891259053128068`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", \
ButtonNote -> \\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6782001336084538`*^9}],

Cell[BoxData["128.3673189621361`"], "Output",
 CellChangeTimes->{3.67820013367481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", "30"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", 
        RowBox[{"Exp", "[", "b", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "c", "]"}], ",", 
        RowBox[{"Exp", "[", "d", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "b", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.3", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "c", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.7", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "d", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "c"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], "^", "2"}], ")"}]}], "/", "4.0"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.678200149346051*^9, 3.678200150354754*^9}}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.678200152701798*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678200153003211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"126.2102152540765`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.006698193591505562`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", \
ButtonNote -> \\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6782001843938932`*^9}],

Cell[BoxData["126.2102152540765`"], "Output",
 CellChangeTimes->{3.678200184463017*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"k", "=", "5"}]], "Input",
 CellChangeTimes->{{3.678210353900168*^9, 3.678210357115397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a1", "]"}], ",", 
        RowBox[{"Exp", "[", "a2", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a1", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a2", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a1", "-", "b1"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a2", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b1", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b2", ",", " ", 
     RowBox[{"-", "k"}], ",", " ", "k"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.67821029050425*^9, 3.678210370187769*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678210376273028*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"114.58813799879213`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.011454331907014241`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", \
ButtonNote -> \\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678210394485257*^9}]
}, Open  ]],

Cell[BoxData[{"114.58813799879213", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"//", " ", 
   RowBox[{"maximize", " ", "the", " ", "function", " ", "for", " ", "n"}]}], 
  "=", 
  RowBox[{
   RowBox[{"1", " ", "and", " ", "K"}], "=", 
   RowBox[{"2", " ", "with", " ", "intercept"}]}]}]}], "Input",
 CellChangeTimes->{{3.678210442517632*^9, 3.6782104566039953`*^9}, {
  3.678210493181211*^9, 3.678210500570125*^9}, {3.678210542758978*^9, 
  3.678210551562717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a1", "]"}], ",", 
        RowBox[{"Exp", "[", "a2", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a1", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a2", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a1", "-", "b1"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", " ", "a2", ",", " ", "b1", ",", " ", "b2"}], "}"}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.678210420325735*^9, 3.678210422012003*^9}, {
  3.6782105562786694`*^9, 3.678210589081369*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14.355716177661657`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", "4.857594489904391`"}], ",", 
     RowBox[{"a2", "\[Rule]", "5.262448458023946`"}], ",", 
     RowBox[{"b1", "\[Rule]", "4.726462296116194`"}], ",", 
     RowBox[{"b2", "\[Rule]", "5.137074506070753`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6782105902779903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Beta", "[", 
       RowBox[{
        RowBox[{"Exp", "[", "a1", "]"}], ",", 
        RowBox[{"Exp", "[", "a2", "]"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"0.4", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a1", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"0.6", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", "a2", "]"}], "-", "1"}], ")"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a1", "-", "b1"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2", "-", "b2"}], ")"}], "^", "2"}], ")"}]}], "/", "2.0"}],
      "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a2", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b1", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b2", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.678210630462945*^9, 3.678210644224545*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678210645333275*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(\\*RowBox[{\\\"2000\\\"}]\\)\[NoBreak] \
times. The global error is expected to decrease monotonically after a number \
of integrand evaluations. Suspect one of the following: the working precision \
is insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"155.84231354085776`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0226434031072443`\\\"}]\\)\[NoBreak] for the \
integral and error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678210664254299*^9}],

Cell[BoxData["155.84231354085776`"], "Output",
 CellChangeTimes->{3.678210664306183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", " ", "+", " ", "1"}]], "Input",
 CellChangeTimes->{{3.678447600770812*^9, 3.678447601707943*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.6784476037206907`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Beta", "[", 
        RowBox[{
         RowBox[{"Exp", "[", "a1", "]"}], ",", 
         RowBox[{"Exp", "[", "a2", "]"}]}], "]"}]}], ")"}], "*", 
     RowBox[{"0.4", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "a1", "]"}], "-", "1"}], ")"}]}], "*", 
     RowBox[{"0.6", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "a2", "]"}], "-", "1"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", " ", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a2", ",", " ", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], " ", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.678447616003916*^9, 3.678447635102612*^9}, 
   3.6784479887793713`*^9}]
},
WindowSize->{1301, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1461, 39, 55, "Input"],
Cell[2044, 63, 59410, 971, 310, "Output"]
}, Open  ]],
Cell[61469, 1037, 92, 1, 32, InheritFromParent],
Cell[CellGroupData[{
Cell[61586, 1042, 1016, 31, 55, "Input"],
Cell[62605, 1075, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62719, 1081, 983, 30, 32, "Input"],
Cell[63705, 1113, 904, 25, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64646, 1143, 958, 30, 55, "Input"],
Cell[65607, 1175, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65731, 1181, 1062, 32, 55, "Input"],
Cell[66796, 1215, 90, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66923, 1221, 126, 3, 32, "Input"],
Cell[67052, 1226, 195, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67284, 1237, 2048, 63, 77, "Input"],
Cell[69335, 1302, 600, 11, 41, "Message"],
Cell[69938, 1315, 1209, 20, 95, "Message"],
Cell[71150, 1337, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71299, 1343, 1345, 41, 55, "Input"],
Cell[72647, 1386, 139, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72823, 1393, 102, 2, 32, "Input"],
Cell[72928, 1397, 321, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73286, 1410, 167, 3, 55, "Input"],
Cell[73456, 1415, 70, 1, 32, "Output"],
Cell[73529, 1418, 70, 1, 32, "Output"]
}, Open  ]],
Cell[73614, 1422, 167, 3, 55, "Input"],
Cell[CellGroupData[{
Cell[73806, 1429, 2158, 63, 99, "Input"],
Cell[75967, 1494, 74411, 1220, 288, "Output"],
Cell[150381, 2716, 317, 5, 32, "Output"],
Cell[150701, 2723, 315, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151053, 2733, 1918, 60, 99, "Input"],
Cell[152974, 2795, 94, 1, 32, "Output"],
Cell[153071, 2798, 94, 1, 32, "Output"],
Cell[153168, 2801, 60196, 986, 304, "Output"]
}, Open  ]],
Cell[213379, 3790, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[213496, 3795, 1570, 51, 55, "Input"],
Cell[215069, 3848, 459, 10, 23, "Message"],
Cell[215531, 3860, 1033, 30, 64, "Output"]
}, Open  ]],
Cell[216579, 3893, 141, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[216745, 3899, 1788, 55, 143, "Input"],
Cell[218536, 3956, 454, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219027, 3972, 840, 26, 32, "Input"],
Cell[219870, 4000, 416, 9, 23, "Message"],
Cell[220289, 4011, 414, 9, 23, "Message"],
Cell[220706, 4022, 416, 9, 23, "Message"],
Cell[221125, 4033, 562, 12, 23, "Message"],
Cell[221690, 4047, 734, 14, 23, "Message"],
Cell[222427, 4063, 330, 9, 37, "Output"]
}, Open  ]],
Cell[222772, 4075, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[222891, 4080, 839, 26, 32, "Input"],
Cell[223733, 4108, 286, 8, 32, "Output"]
}, Open  ]],
Cell[224034, 4119, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[224151, 4124, 1571, 51, 55, "Input"],
Cell[225725, 4177, 428, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226190, 4192, 1934, 61, 77, "Input"],
Cell[228127, 4255, 576, 11, 41, "Message"],
Cell[228706, 4268, 79, 1, 32, "Output"]
}, Open  ]],
Cell[228800, 4272, 126, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[228951, 4278, 1979, 62, 77, "Input"],
Cell[230933, 4342, 95, 1, 32, "Output"],
Cell[231031, 4345, 602, 11, 41, "Message"],
Cell[231636, 4358, 101, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231774, 4364, 1977, 62, 77, "Input"],
Cell[233754, 4428, 122, 2, 32, "Output"],
Cell[233879, 4432, 601, 11, 41, "Message"],
Cell[234483, 4445, 1211, 20, 95, "Message"],
Cell[235697, 4467, 137, 2, 32, "Output"]
}, Open  ]],
Cell[235849, 4472, 122, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[235996, 4478, 1930, 61, 77, "Input"],
Cell[237929, 4541, 71, 1, 32, "Output"],
Cell[238003, 4544, 580, 11, 41, "Message"],
Cell[238586, 4557, 1188, 20, 95, "Message"],
Cell[239777, 4579, 86, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239900, 4585, 1928, 61, 77, "Input"],
Cell[241831, 4648, 71, 1, 32, "Output"],
Cell[241905, 4651, 578, 11, 41, "Message"],
Cell[242486, 4664, 1188, 20, 95, "Message"],
Cell[243677, 4686, 87, 1, 32, "Output"]
}, Open  ]],
Cell[243779, 4690, 115, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[243919, 4696, 1440, 46, 55, "Input"],
Cell[245362, 4744, 578, 11, 41, "Message"],
Cell[245943, 4757, 1187, 20, 95, "Message"]
}, Open  ]],
Cell[247145, 4780, 465, 10, 55, "Input"],
Cell[CellGroupData[{
Cell[247635, 4794, 1187, 38, 55, "Input"],
Cell[248825, 4834, 407, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249269, 4849, 1449, 46, 55, "Input"],
Cell[250721, 4897, 578, 11, 41, "Message"],
Cell[251302, 4910, 1185, 20, 95, "Message"],
Cell[252490, 4932, 88, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252615, 4938, 125, 2, 32, "Input"],
Cell[252743, 4942, 72, 1, 32, "Output"]
}, Open  ]],
Cell[252830, 4946, 920, 27, 55, "Input"]
}
]
*)

